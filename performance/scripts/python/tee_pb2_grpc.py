# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import tee_pb2 as tee__pb2


class TeeServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunTest = channel.unary_unary(
        '/com.vmware.concord.tee.TeeService/RunTest',
        request_serializer=tee__pb2.TestInput.SerializeToString,
        response_deserializer=tee__pb2.TestOutput.FromString,
        )
    self.SkvbcRead = channel.unary_unary(
        '/com.vmware.concord.tee.TeeService/SkvbcRead',
        request_serializer=tee__pb2.RawSkvbcRequest.SerializeToString,
        response_deserializer=tee__pb2.RawSkvbcResponse.FromString,
        )
    self.SkvbcWrite = channel.unary_unary(
        '/com.vmware.concord.tee.TeeService/SkvbcWrite',
        request_serializer=tee__pb2.RawSkvbcRequest.SerializeToString,
        response_deserializer=tee__pb2.RawSkvbcResponse.FromString,
        )
    self.WriteBlock = channel.unary_unary(
        '/com.vmware.concord.tee.TeeService/WriteBlock',
        request_serializer=tee__pb2.KVData.SerializeToString,
        response_deserializer=tee__pb2.TestOutput.FromString,
        )


class TeeServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RunTest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SkvbcRead(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SkvbcWrite(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WriteBlock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TeeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunTest': grpc.unary_unary_rpc_method_handler(
          servicer.RunTest,
          request_deserializer=tee__pb2.TestInput.FromString,
          response_serializer=tee__pb2.TestOutput.SerializeToString,
      ),
      'SkvbcRead': grpc.unary_unary_rpc_method_handler(
          servicer.SkvbcRead,
          request_deserializer=tee__pb2.RawSkvbcRequest.FromString,
          response_serializer=tee__pb2.RawSkvbcResponse.SerializeToString,
      ),
      'SkvbcWrite': grpc.unary_unary_rpc_method_handler(
          servicer.SkvbcWrite,
          request_deserializer=tee__pb2.RawSkvbcRequest.FromString,
          response_serializer=tee__pb2.RawSkvbcResponse.SerializeToString,
      ),
      'WriteBlock': grpc.unary_unary_rpc_method_handler(
          servicer.WriteBlock,
          request_deserializer=tee__pb2.KVData.FromString,
          response_serializer=tee__pb2.TestOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.vmware.concord.tee.TeeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
