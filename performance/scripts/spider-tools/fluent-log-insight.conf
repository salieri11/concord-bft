<source>
  @type tail
  <parse>
    @type json
  </parse>
  path /var/lib/docker/containers/*/*-json.log
  pos_file /var/log/fluentd-docker.pos
  read_from_head true
  tag docker.*
  refresh_interval 5s
  enable_stat_watcher false
</source>

<filter docker.var.lib.docker.containers.**.*>
  @type record_modifier
  <record>
    service_name ${id = tag_parts[5]; JSON.parse(IO.read("/var/lib/docker/containers/#{id}/config.v2.json"))['Name'][1..-1]}
    consortium_id "#{ENV['CONSORTIUM_ID']}"
  </record>
</filter>

<match docker.var.lib.docker.containers.**.*>
  @type rewrite_tag_filter
  <rule>
    key service_name
    pattern /^(.+)$/
    tag $1
  </rule>
</match>

<filter spider-*>
  @type parser
  key_name log
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /^(?<logtime>[^ ]+ [^ ]+) (?<level>[^ ]+) \[(?<thread_id>[^ ]+)\] (?<logger>[^ ]+): (?<message>.+?)$/
  </parse>
</filter>

<match spider-*>
  @type vmware_loginsight
  scheme https
  ssl_verify false
  host "#{ENV['LOG_INSIGHT_HOST']}"
  port "#{ENV['LOG_INSIGHT_PORT']}"
  path api/v1/events/ingest
  agent_id "#{ENV['LOG_INSIGHT_AGENT_ID']}"
  http_method post
  serializer json
  rate_limit_msec 0
  raise_on_error false
  include_tag_key false
  authentication basic
  username "#{ENV['LOG_INSIGHT_USERNAME']}"
  password "#{ENV['LOG_INSIGHT_PASSWORD']}"
</match>
