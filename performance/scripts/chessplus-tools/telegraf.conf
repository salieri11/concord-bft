# Telegraf Configuration

[global_tags]
  blockchain = "${BLOCKCHAIN_ID}"
  consortium = "${CONSORTIUM_ID}"
  vm_ip = "${VM_IP}"
  vm_type = "${VM_TYPE}"
  source = "${WAVEFRONT_SOURCE}"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = true

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.cpu]]
  percpu = false
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.mem]]
  fieldpass = ["total", "used", "available", "*_percent"]

[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = ["*"]
  namepass = ["docker_container_mem", "docker_container_cpu"]
  fieldpass = ["usage_total", "usage_percent", "usage", "limit"]
  tagexclude = ["engine_host", "server_version", "container_image", "container_status", "container_version"]

[[processors.regex]]
  [[processors.regex.tags]]
    key = "container_name"
    pattern = "([a-z]+)[0-9|-]*$"
    replacement = "${1}"

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

[[inputs.prometheus]]
  urls = ["http://${VM_IP}:55101/metrics", "http://${VM_IP}:55102/metrics"]
  metric_version = 2

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.wavefront]]
  host = "wavefront"
  port = 2878
  prefix = "vmware.blockchain.chessplus."

#[[outputs.file]]
#  files = ["stdout"]
#  data_format = "wavefront"
