find_path(SKVBC_INCLUDE_DIR simpleKVBTestsBuilder.hpp
        HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../submodules/concord-bft/tests/simpleKVBC)
set(SKVBC_COMMANDS_HANDLER_DIR "${SKVBC_INCLUDE_DIR}/TesterReplica")

file(GLOB concord_src "main.cpp"
  "api/*.cpp"          "api/*.hpp"
  "config/*.cpp"       "config/*.hpp"
  "daml/*.cpp"         "daml/*.hpp"
  "hlf/*.cpp"          "hlf/*.hpp"
  "thin_replica/*.cpp" "thin_replica/*.hpp"
  "tee/*.cpp"          "tee/*.hpp"
  "performance/*.cpp"  "performance/*.hpp"
  "${SKVBC_COMMANDS_HANDLER_DIR}/internalCommandsHandler.hpp"
  "${SKVBC_COMMANDS_HANDLER_DIR}/internalCommandsHandler.cpp"
)

string(APPEND CMAKE_CXX_FLAGS " -Wall")
if(NOT APPLE)
string(APPEND CMAKE_CXX_FLAGS " -Werror")
endif()

include_directories(${CMAKE_CURRENT_BINARY_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${SKVBC_INCLUDE_DIR})
get_property(thresh_include GLOBAL PROPERTY thresh_include_folder)
include_directories(${thresh_include})

add_subdirectory("common")
add_subdirectory("consensus")
add_subdirectory("ethereum")
add_subdirectory("external_client")
add_subdirectory("pruning")
add_subdirectory("reconfiguration")
add_subdirectory("storage")
add_subdirectory("time")
add_subdirectory("utils")
add_subdirectory("bftclient")

add_executable(concord
  ${concord_src}
  ${PROTO_SRCS} ${PROTO_HDRS}
  ${GRPC_SRCS}
)

if(BUILD_ROCKSDB_STORAGE)
target_compile_definitions(concord PRIVATE USE_ROCKSDB=1)
endif()

target_compile_definitions(concord PRIVATE __BASE=1 SPARSE_STATE=1 USE_TLS=1)

target_link_libraries(concord
  proto
  ${Boost_LIBRARIES}
  log4cplus
  ${yaml-cpp_LIBRARIES}
  jaegertracing
  opentracing
  thrift
  concord_common
  concord_consensus
  concord_ethereum
  concord_pruning
  concord_reconfiguration
  concord_storage
  concord_time
  concord_utils
  kvbc
  gRPC::grpc++_reflection
  $<TARGET_OBJECTS:logging_dev>
)
