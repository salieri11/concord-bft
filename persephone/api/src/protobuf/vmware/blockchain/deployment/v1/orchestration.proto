/* [START declaration] */
syntax = "proto3";
package vmware.blockchain.deployment.v1;

import "vmware/blockchain/deployment/v1/core.proto";
/* [END declaration] */

option go_package = "vmware.com/blockchain/deployment/v1;deployment";

/* [START java_declaration] */
option java_package = "com.vmware.blockchain.deployment.v1";
option java_multiple_files = true;
/* [END java_declaration] */

/* [START messages] */
/**
 * Denote the identifier of an orchestration site.
 *
 */
message OrchestrationSiteIdentifier {
    string id = 3;
}

/**
 * Model definition of information pertaining to an [OrchestrationSite].
 *
 * @param[type]
 *   type of the the endpoint.
 * @param[labels]
 *   a collection of key-value entries containing metadata information.
 * @param[vmc]
 *   information pertaining to a [Type.VMC] type endpoint.
 * @param[vsphere]
 *   information pertaining to a [Type.VSPHERE] type endpoint.
 */
message OrchestrationSiteInfo {
    enum Type {
        NONE = 0;
        VMC = 1;
        VSPHERE = 2;
    }

    Type type = 1;
    map<string, string> labels = 2;
    VmcOrchestrationSiteInfo vmc = 3;
    VSphereOrchestrationSiteInfo vsphere = 4;
}

/**
 * Model definition of an orchestration site.
 *
 * @param[id]
 *   identifier of the site.
 * @param[info]
 *   information about the site.
 */
message OrchestrationSite {
    OrchestrationSiteIdentifier id = 1;
    OrchestrationSiteInfo info = 2;
}

/**
 * Model definition of an reportable view of an orchestration site.
 *
 * @param[id]
 *   identifier of the site.
 * @param[type]
 *   type of the the endpoint.
 * @param[labels]
 *   a collection of key-value entries containing metadata information.
 */
message OrchestrationSiteView {
    OrchestrationSiteIdentifier id = 1;
    OrchestrationSiteInfo.Type type = 2;
    map<string, string> labels = 3;
}

/**
 * Model definition of a an IPv4 network utilized by compute resources in an orchestration site.
 *
 * @param[name]
 *   resource name of the network.
 * @param[address_allocation]
 *   network address allocation scheme type.
 * @param[gateway]
 *   network gateway address.
 * @param[subnet]
 *   subnet (CIDR) size of the IP network (e.g. 24, 28, etc).
 * @param[allocation server]
 *   endpoint to IP address allocation service (or external DHCP server).
 */
message IPv4Network {
    /**
     * Enumeration of address allocation schemes.
     * TODO: deprecate gateway in favor of gateway_ip
     */
    enum AddressAllocationScheme {
        DHCP = 0; // Dynamic host configuration protocol.
        STATIC = 1; // Static IP allocation facilitated by an allocation server.
    }

    string name = 1;
    AddressAllocationScheme address_allocation = 2;
    int32 gateway = 3;
    int32 subnet = 4;
    Endpoint allocation_server = 5;
    repeated string name_servers = 6 [packed=false];
    string gateway_ip = 7;
}

/**
 * Model definition of an orchestration site targeting a virtual datacenter within a VMware vSphere
 * environment.
 *
 * @param[resourcePool]
 *   name of the default resource pool to use for compute deployment.
 * @param[datastore]
 *   name of the default datastore to use for compute deployment.
 * @param[folder]
 *   name of the default inventory folder to use for compute deployment.
 * @param[network]
 *   default IPv4 compute network resource to use for compute deployment.
 */
message VSphereDatacenterInfo {
    string resource_pool = 2;
    string datastore = 3;
    string folder = 4;
    IPv4Network network = 5;
    OutboundProxyInfo outbound_proxy = 6;
}

/**
 * Model definition of a VMware Cloud-based orchestration site.
 *
 * @param[authentication]
 *   authentication endpoint information.
 * @param[organization]
 *   VMC organization identifier.
 * @param[datacenter]
 *   SDDC datacenter identifier owned by the organization.
 * @param[vsphere]
 *   information pertaining to the vSphere datacenter to use for compute deployment.
 * @param[log_managements]
 *   configurations for logging service deployment.
 */
message VmcOrchestrationSiteInfo {
    Endpoint authentication = 1;
    Endpoint api = 2;
    Endpoint container_registry = 3;
    string organization = 4;
    string datacenter = 5;
    VSphereDatacenterInfo vsphere = 6;
    repeated LogManagement log_managements = 7 [packed=false];
    Wavefront wavefront = 8;
    ElasticSearch elasticsearch = 9;
    Endpoint notary_server = 10;
}

/**
 * Model definition of a VMware vSphere orchestration site.
 *
 * @param[api]
 *   API endpoint information.
 * @param[containerRegistry]
 *   container registry endpoint information.
 * @param[vsphere]
 *   information pertaining to the vSphere datacenter to use for compute deployment.
 * @param[log_managements]
 *   configuration for logging service deployment.
 */
message VSphereOrchestrationSiteInfo {
    Endpoint api = 1;
    Endpoint container_registry = 2;
    VSphereDatacenterInfo vsphere = 3;
    repeated LogManagement log_managements = 4 [packed=false];
    Wavefront wavefront = 5;
    ElasticSearch elasticsearch = 6;
    Endpoint notary_server = 7;
}

/**
* Model definition of wavefront object.
*
*/
message Wavefront {
    string url = 1;
    string token = 2;
}

/**
* Model definition of ES object.
*
*/
message ElasticSearch {
    string url = 1;
    string username = 2;
    string password = 3;
}

/* [END messages] */
