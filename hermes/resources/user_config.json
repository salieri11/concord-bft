{
  "metainf": {
    "env":{
      "jobName": "<METAINF_ENV_JOB_NAME>",
      "buildNumber": "<METAINF_ENV_BUILD_NUMBER>",
      "dockerTag": "<METAINF_ENV_DOCKER_TAG>",
      "workspace": "<METAINF_ENV_WORKSPACE>"
    }
  },
  "gitlab":{ "token": "<GITLAB_API_ONLY_TOKEN>" },
  "jenkins":{ "username": "svc.blockchain_1", "token": "<JENKINS_JSON_API_KEY>", "builderPassword": "<JENKINS_BUILDER_PASSWORD>" },
  "communication":{
    "slack": {
      "workspaces":{
        "vmware": { "name": "VMware Internal Workspace", "teamId": "T024JFTN4", "appToken": "<SLACK_BOT_API_TOKEN>" },
        "vmw-da":{ "name": "VMW-DA Joint Workspace", "teamId": "TGG9FQXCK", "appToken": "<VMW_DA_SLACK_BOT_API_TOKEN>" }
      },
      "channels": {
        "vdaml-devops":{ "workspace": "vmw-da", "channelId": "CR94YNQPQ" },
        "vmwathena": { "workspace": "vmware", "channelId": "G9AC1C9E0" },
        "blockchain-build-fail": { "workspace": "vmware", "channelId": "C010S8DQF5Y" },
        "blockchain-long-tests-status": { "workspace": "vmware", "channelId": "C0109M6JQKE" },
        "blockchain-concierge": { "workspace": "vmware", "channelId": "C012X0T8N0G" },
        "blockchain-status": { "workspace": "vmware", "channelId": "GUA5WCCSC" }
      }
    }
  },
  "dashboard": {
    "devops": {
      "wavefront": { "url": "https://vmware.wavefront.com", "token": "<DASHBOARD_WAVEFRONT_TOKEN>" }
    }
  },
  "product": {
    "launch": [
      {
        "reverseProxy": {
          "buildRoot": "../docker",
          "helen1": {
            "launchCommand": "docker",
            "parameters": [
              "run",
              "--rm",
              "-v",
              "${CONCORD_HOME}/docker/data/nginx/local.conf.d:/etc/nginx/conf.d",
              "--network",
              "host",
              "--name",
              "reverse-proxy-hermes-test",
              "vmwblockchain/reverse-proxy:latest"
            ]
          }
        }
      },
      {
        "apiServer": {
          "buildRoot": "../helen",
          "helen1": {
            "launchCommand": "/usr/bin/java",
            "parameters": [
                "-jar",
                "-Dspring.profiles.active=test",
                "target/helen-1.0-SNAPSHOT.jar",
              "application-test.properties"
            ]
          }
        }
      },
      {
        "concord1": {
          "buildRoot": "../concord/build",
          "concord1": {
            "launchCommand": "src/concord",
            "parameters": [
              "-c",
              "test/resources/concord1.config"
            ]
          }
        }
      },
      {
        "concord2": {
          "buildRoot": "../concord/build",
          "concord2": {
            "launchCommand": "src/concord",
            "parameters": [
              "-c",
              "test/resources/concord2.config"
            ]
          }
        }
      },
      {
        "concord3": {
          "buildRoot": "../concord/build",
          "concord3": {
            "launchCommand": "src/concord",
            "parameters": [
              "-c",
              "test/resources/concord3.config"
            ]
          }
        }
      },
      {
        "concord4": {
          "buildRoot": "../concord/build",
          "concord4": {
            "launchCommand": "src/concord",
            "parameters": [
              "-c",
              "test/resources/concord4.config"
            ]
          }
        }
      }
    ],
    "users": [
      {
        "hash": "0x1111111111111111111111111111111111111111",
        "password": "11111"
      }
    ],
    "db_users": [{
      "username": "admin-blockchain-dev@csp.local",
      "password": "Admin!23"
    }],
    "custom_items_comment": "A specific blockchain and org with users may be passed in when also passing in a Helen to use.  custom_blockchain is the blockchain ID.  custom_org contains the ID of the org, followd by a structure of users, roles, and API keys.  If the test framework needs a user for a role and the api_key field is not set, it will fall back to the user/api_key for the role all_roles.  IMPORTANT: Be sure the org and users are properly set up with the service specified in the properties file used by the Helen which is passed in.",
    "custom_blockchain": "",
    "custom_org": {
      "id": "",
      "<username>": {
        "all_roles": {
          "api_key": ""
        },
        "consortium_admin": {
          "api_key": ""
        },
        "consortium_operator": {
          "api_key": ""
        },
        "consortium_participant": {
          "api_key": ""
        },
        "org_admin": {
          "api_key": ""
        },
        "org_dev": {
          "api_key": ""
        },
        "org_user": {
          "api_key": ""
        }
      }
    }
  },
  "ethereum": {
    "testRoot": "../../ethereum_tests",
    "url": "http://localhost:8545",
    "users": [
      {
        "hash": "0x2407cbf3b57e480df66c91650535319ef8bf74c8",
        "password": "11111"
      }
    ]
  },
  "performance": {
    "filename": "NORMALIZED_COMMANDS.txt.gz"
  },
  "concordConfigurationGeneration": {
    "configVolumePath": "../docker/config-public",
    "configDistributionScript":
        "../docker/config-public/distribute-configuration-files.sh",
    "configDistributionArgs": [
        "../docker/config-public/concord",
        "../docker/config-concord1/concord.config",
        "../docker/config-concord2/concord.config",
        "../docker/config-concord3/concord.config",
        "../docker/config-concord4/concord.config"]
  },
  "logInsight": {
    "destinationName": "LOG_INSIGHT",
    "address": "10.78.20.10",
    "port": 9543,
    "username": "fluentd",
    "password": "<LOG_INSIGHT_ON_ONECLOUD_PASSWORD>"
  },
  "persephoneTests": {
    "modelService": {
      "deployment_component_ids": {
        "AGENT": "agent",
        "FLUENTD": "fluentd",
        "CONCORD": "concord-core",
        "ETHRPC": "ethrpc",
        "DAML_EXECUTION_ENGINE": "daml-execution-engine",
        "DAML_LEDGER_API": "daml-ledger-api",
        "DAML_INDEX_DB": "daml-index-db",
        "HLF_ORDERER": "hlf-orderer",
        "HLF_PEER": "hlf-peer",
        "HLF_TOOLS": "hlf-tools",
        "WAVEFRONT_PROXY": "wavefront-proxy",
        "JAEGER_AGENT": "jaeger-agent",
        "TELEGRAF": "telegraf"
      },
      "defaults": {
        "concord_model_version": "1.0",
        "concord_model_template_id": "8abc7fda-9576-4b13-9beb-06f867cf2c7c",
        "deployment_components": {
          "ethereum": {
            "vmwblockchain/agent:latest": "agent",
            "vmwblockchain/fluentd:latest": "fluentd",
            "vmwblockchain/concord-core:latest": "concord",
            "vmwblockchain/ethrpc:latest": "ethrpc",
            "vmwblockchain/wavefront-proxy:6.1": "wavefront-proxy",
            "vmwblockchain/jaeger-agent:1.17": "jaeger-agent",
            "vmwblockchain/telegraf:1.14.0": "telegraf"
            },
          "daml": {
            "vmwblockchain/agent:latest": "agent",
            "vmwblockchain/fluentd:latest": "fluentd",
            "vmwblockchain/concord-core:latest": "concord",
            "vmwblockchain/daml-execution-engine:latest": "daml_execution_engine",
            "vmwblockchain/daml-ledger-api:latest": "daml_ledger_api",
            "vmwblockchain/daml-index-db:latest": "daml_index_db",
            "vmwblockchain/wavefront-proxy:6.1": "wavefront-proxy",
            "vmwblockchain/jaeger-agent:1.17": "jaeger-agent",
            "vmwblockchain/telegraf:1.14.0": "telegraf"
          },
          "daml_committer": {
            "vmwblockchain/agent:latest": "agent",
            "vmwblockchain/fluentd:latest": "fluentd",
            "vmwblockchain/concord-core:latest": "concord",
            "vmwblockchain/daml-execution-engine:latest": "daml_execution_engine",
            "vmwblockchain/wavefront-proxy:6.1": "wavefront-proxy",
            "vmwblockchain/jaeger-agent:1.17": "jaeger-agent",
            "vmwblockchain/telegraf:1.14.0": "telegraf"
          },
          "daml_participant": {
            "vmwblockchain/agent:latest": "agent",
            "vmwblockchain/fluentd:latest": "fluentd",
            "vmwblockchain/daml-ledger-api:latest": "daml_ledger_api",
            "vmwblockchain/daml-index-db:latest": "daml_index_db",
            "vmwblockchain/wavefront-proxy:6.1": "wavefront-proxy",
            "vmwblockchain/jaeger-agent:1.17": "jaeger-agent",
            "vmwblockchain/telegraf:1.14.0": "telegraf"
          },
          "hlf": {
            "vmwblockchain/agent:latest": "agent",
            "vmwblockchain/concord-core:latest": "concord",
            "vmwblockchain/hlf-orderer:latest": "hlf-orderer",
            "vmwblockchain/hlf-peer:latest": "hlf-peer",
            "vmwblockchain/hlf-tools:latest": "hlf-tools",
            "vmwblockchain/wavefront-proxy:6.1": "wavefront-proxy",
            "vmwblockchain/jaeger-agent:1.17": "jaeger-agent",
            "vmwblockchain/telegraf:1.14.0": "telegraf"
          }

        }
      }
    },
    "provisioningService": {
      "concordNode": {
        "username": "root",
        "password": "c0nc0rd"
      }
    }
  }
}
