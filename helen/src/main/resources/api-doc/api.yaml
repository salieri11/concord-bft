openapi: 3.0.0
info:
  title: VMware Blockchain API
  description: A Scalable Byzantine Fault Tolerant Ledger
  version: 1.0.0
servers:
  - url: /api
    description: Local API endpoint
tags:
  - name: profiles
    description: User, Organization and Consortium Management
  - name: blockchains
    description: Blockchain Management
  - name: contracts
    description: Contract Management
  - name: ethereum
    description: Ethereum calls
  - name: concord
    description: Calls to Concord
  - name: tasks
    description: Task Management
  - name: deprecated
    description: Deprecated APIs
paths:
  /blockchains:
    summary: Blockchain
    get:
      tags:
        - blockchains
      summary: List all blockchains
      operationId: getBlockchains
      responses:
        200:
          description: Returns a list of all accessible blockchains
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Blockchain ID
                    consortium_id:
                      type: string
                      format: uuid
                      description: ID of owning consortium
                    blockchain_type:
                      type: string
                      enum:
                        - ETHEREUM
                        - DAML
                        - HLF
                      description: Type of blockchain node
                    blockchain_state:
                      type: string
                      enum:
                        - ACTIVE
                        - FAILED
                        - INACTIVE
                      description: State of blockchain
                    version:
                      type: string
                      description: Version details
                    created_by:
                      type: string
                      description: Name of the blockchain creator
                    created:
                      type: string
                      format: date-time
                      description: Timestamp when the blockchain was created.
    post:
      tags:
        - blockchains
      summary: Create a new blockchain
      operationId: blockchainPost
      requestBody:
        description: New blockchain POST request body
        content:
          application/json:
            schema:
              type: object
              required:
                - consortium_id
              properties:
                consortium_id:
                  type: string
                  format: uuid
                  description: ID of owning consortium
                blockchain_type:
                  type: string
                  enum:
                    - ETHEREUM
                    - DAML
                  description: Type of blockchain node
                replica_nodes:
                  description: |
                    Replica node details. Contains zone ID and node sizing info of replicas.
                  type: array
                  items:
                    $ref: '#/components/schemas/ReplicaNode'
                client_nodes:
                  description: |
                    Client nodes details. Contains zone ID, authURL, group name and node sizing info of clients.
                  type: array
                  items:
                    $ref: '#/components/schemas/ClientNode'
      responses:
        202:
          description: Returns the deployment task ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                    format: uuid
                    description: Task ID
  /blockchains/deregister/{bid}:
    summary: De-register blockchains by marking them inactive
    post:
      tags:
        - blockchains
      summary: De-register a blockchain
      operationId: deRegister
      parameters:
        - name: bid
          in: path
          description: The id of the blockchain to be de-registered
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          $ref: '#/components/responses/BlockchainGetResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
  /blockchains/zones:
    summary: Deployment zones for blockchains
    get:
      tags:
        - blockchains
      summary: Get available zones
      operationId: getBlockchainZones
      responses:
        200:
          $ref: '#/components/responses/ZoneListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

    post:
      tags:
        - blockchains
      summary: Create a new new zone, or refresh zones
      operationId: createBlockchainOnpremZones
      parameters:
        - name: action
          in: query
          description: Refresh zones instead of creating
          schema:
            type: string
            enum: [reload]
      description: Create a new on-premises zone as defined
      requestBody:
        $ref: '#/components/requestBodies/CreateZoneRequest'
      responses:
        200:
          $ref: '#/components/responses/ZoneGetResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'

  /blockchains/zones/{zone_id}:
    get:
      tags:
        - blockchains
      summary: Get Zone Details
      operationId: getOnpremZones
      parameters:
        - $ref: '#/components/parameters/ZoneId'
      responses:
        200:
          $ref: '#/components/responses/ZoneGetResponse'
    patch:
      tags:
        - blockchains
      summary: Update an on-premises zone
      operationId: patchOnpremZones
      description: Update an existing on-premises zone
      parameters:
        - name: zone_id
          in: path
          description: The id of the on-premises zone to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/PatchZoneRequest'
      responses:
        200:
          $ref: '#/components/responses/ZoneGetResponse'
    delete:
      tags:
        - blockchains
      summary: Delete an on-premises zone
      operationId: DeleteOnpremZones
      description: Delete an on-premises zone
      parameters:
        - name: zone_id
          in: path
          description: The id of the on-premises zone to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successfully deleted zone
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Deleted zone id

  /blockchains/zones/dependencies/{zone_id}:
    get:
      tags:
        - blockchains
      summary: Get Zone Dependency Details
      operationId: getZoneDependencies
      parameters:
        - $ref: '#/components/parameters/ZoneId'
      responses:
        200:
          $ref: '#/components/responses/DependentNodesGetResponse'

  /blockchains/{bid}:
    summary: Blockchain Operations
    get:
      tags:
        - blockchains
      summary: Get Blockchain information
      operationId: getBlockchain
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          $ref: '#/components/responses/BlockchainGetResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
  /blockchains/{bid}/replicas:
    get:
      tags:
        - blockchains
      summary: Get list of replicas with status
      operationId: listReplicas
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of replicas and status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Replica ID
                    name:
                      type: string
                      description: Replica Name
                    public_ip:
                      type: string
                      description: Public IP address of replica
                    private_ip:
                      type: string
                      format: ip
                      description: Private IP
                    rpc_url:
                      type: string
                      description: Public url to replica API
                    status:
                      type: string
                      description: Current status of replica
                    millis_since_last_message:
                      type: integer
                    millis_since_last_message_threshold:
                      type: integer
                    certificate:
                      type: string
                      description: SSL certificate of replica
                    zone_id:
                      type: string
                      format: uuid
                      description: Zone ID where this replica has been deployed
    post:
      tags:
        - blockchains
      summary: Start/stop a list of replicas
      operationId: replicaListStartStop
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: action
          in: query
          description: Start/stop
          schema:
            type: string
            enum: [start, stop]
      requestBody:
        description: Replicas to stop/start
        content:
          application/json:
            schema:
              type: object
              properties:
                node_ids:
                  deprecated: true
                  description: Please use replica_ids
                  type: array
                  items:
                    type: string
                    format: uuid
                replica_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
        required: true
      responses:
        202:
          description: Task ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_ids:
                    type: array
                    items:
                      type: string
                      format: uuid
  /blockchains/{bid}/replicas/{replica_id}:
    post:
      tags:
        - blockchains
      summary: Start/stop a replica
      operationId: replicaStartStop
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: replica_id
          required: true
          in: path
          description: Replica ID
          schema:
            type: string
            format: uuid
        - name: action
          required: true
          in: query
          description: Start/stop
          schema:
            type: string
            enum: [start, stop]
      responses:
        202:
          description: Task ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                    format: uuid
  /blockchains/{bid}/replicas/{replica_id}/credentials:
    get:
      tags:
        - blockchains
      summary: Get credentials for given replica
      operationId: getReplicaCredentials
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: replica_id
          required: true
          in: path
          description: Replica ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Replica credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Replica username
                  password:
                    type: string
                    description: Replica password
  /blockchains/{bid}/concord/blocks:
    summary: Blockchain Blocks
    get:
      tags:
        - concord
      summary: List blocks in the chain, most recent first
      operationId: blockListGetBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: latest
          in: query
          description: Most recent block to start with
          required: false
          schema:
            type: integer
            format: string
        - name: count
          in: query
          description: Number of blocks to return
          required: false
          schema:
            type: integer
            format: string
      responses:
        200:
          description: Blocks
          content:
            application/json:
              schema:
                type: object
                properties:
                  blocks:
                    type: array
                    items:
                      type: object
                      properties:
                        number:
                          type: integer
                        hash:
                          type: string
                        url:
                          type: string
                  next:
                    type: string
  /blockchains/{bid}/concord/blocks/{index}:
    summary: Specific Blockchain Block
    get:
      tags:
        - concord
      summary: Get a specific block, by its number in the chain
      operationId: blockGetBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: index
          in: path
          description: The index of the block to get
          required: true
          schema:
            type: integer
            format: string
      responses:
        200:
          description: Block
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                  hash:
                    type: string
                  parentHash:
                    type: string
                  nonce:
                    type: string
                  size:
                    type: integer
                  timestamp:
                    type: integer
                    description: The proposing replica's local system time. (In seconds since the UNIX epoch.)
                  transactions:
                    type: array
                    items:
                      type: string
  /blockchains/{bid}/concord/transactions/{hash}:
    summary: Specific Blockchain Block
    get:
      tags:
        - concord
      summary: Get a specific transaction, by its hash
      operationId: txGetBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: hash
          in: path
          description: The hash of the index to get
          required: true
          schema:
            type: string
      responses:
        200:
          description: Transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  from:
                    type: string
                  to:
                    type: string
                  contract_address:
                    type: string
                  value:
                    type: integer
                  input:
                    type: string
                  block_hash:
                    type: string
                  block_number:
                    type: integer
                  transaction_index:
                    type: integer
                  nonce:
                    type: integer
                  status:
                    type: integer
  /blockchains/{bid}/concord/eth:
    summary: Ethereum JSON RPC API
    post:
      tags:
        - ethereum
      summary: Call the named procedure
      externalDocs:
        description: Ethereum JSON RPC Docs
        url: https://ethereum.gitbooks.io/frontier-guide/content/rpc.html
      operationId: ethJsonRpcPostBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid


      requestBody:
        description: RPC Request
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                jsonrpc:
                  type: string
                method:
                  type: string
                params:
                  type: array
                  items:
                    type: object
      responses:
        200:
          description: RPC Result
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - jsonrpc
                properties:
                  id:
                    type: integer
                  jsonrpc:
                    type: string
                  result:
                    type: string
                  error:
                    type: string
  /blockchains/{bid}/concord/contracts:
    summary: Blockchain contracts
    get:
      tags:
        - contracts
      summary: List all deployed contracts
      operationId: contractsGetBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns a list of all contracts deployed to concord
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contract_id:
                      type: string
                      description: String representing id of this contract
                    owner:
                      type: string
                      description: String representing address of the owner of this contract
                    url:
                      type: string
                      description: The URI representing this specific contract
    post:
      tags:
        - contracts
      summary: Deploy a new contract to concord
      operationId: ContractsPostBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
      requestBody:
        description: New contract POST request body
        content:
          application/json:
            schema:
              type: object
              required:
                - contract_id
                - version
                - from
                - sourcecode
                - contract_name
                - compiler_version
              properties:
                contract_id:
                  type: string
                  description: String representing contract id
                version:
                  type: string
                  description: String representing version number of this contract
                from:
                  type: string
                  description: String representing owners address
                sourcecode:
                  type: string
                  description: String representing solidity source code of this version
                contract_name:
                  type: string
                  description: String representing contract name you used to deploy the contract
                constructor_params:
                  type: string
                  description: String representing constructor parameters needed to deploy this contract, if your contract does not require constructor parameters, set this to ""
                compiler_version:
                  type: string
                  description: String representing solc version you used to deploy the contract
                is_optimize:
                  type: boolean
                  description: True if using the optimizer. False otherwise
                runs:
                  type: string
                  description: String representing optimize for how many times you intend to run the code
      responses:
        200:
          description: Description of deployed contract
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    contract_id:
                      type: string
                      description: String representing id of this contract
                    version:
                      type: string
                      description: String representing name of this version
                    url:
                      type: string
                      description: The URI representing this specific version
                    error:
                      type: string
                      description: Error message if any error occurred during deployment, null otherwise
  /blockchains/{bid}/concord/contracts/{contract_id}:
    get:
      tags:
        - contracts
      summary: Get a contract with id `contract_id`
      operationId: GetContractByIdBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: contract_id
          in: path
          description: The id of the contract to get
          required: true
          schema:
            type: string
            format: string
          style: simple
      responses:
        200:
          description: Details of the particular contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract_id:
                    type: string
                    description: String representing id of this contract
                  owner:
                    type: string
                    description: String representing address of the owner of this contract
                  versions:
                    type: array
                    items:
                      properties:
                        address:
                          type: string
                          description: String representing address at which this version is deployed
                        metadata:
                          type: object
                          description: A metadata JSON object about source code of this version generated by solidity compiler
                        version:
                          type: string
                          description: String representing name of this version
                        url:
                          type: string
                          description: The URI representing this specific version
  /blockchains/{bid}/concord/contracts/{contract_id}/versions/{version_name}:
    get:
      tags:
        - contracts
      summary: Get a contract identified by given `contract_id` and `version_name`
      operationId: GetContractByIdAndVersionBlk
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: contract_id
          in: path
          description: The id of the contract to get
          required: true
          schema:
            type: string
            format: string
          style: simple
        - name: version_name
          in: path
          description: Name of the version of contract to get
          required: true
          schema:
            type: string
            format: string
          style: simple
      responses:
        200:
          description: All details of a particular version of this particular contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract_id:
                    type: string
                    description: String representing id of this contract
                  owner:
                    type: string
                    description: String representing address of the owner of this contract
                  version:
                    type: string
                    description: String representing name of this version
                  metadata:
                    type: object
                    description: A metadata JSON object about source code of this version generated by solidity compiler
                  address:
                    type: string
                    description: String representing address at which this version is deployed
                  bytecode:
                    type: string
                    description: String representing compiled bytecode of this version
                  sourcecode:
                    type: string
                    description: String representing the actual source code of this version
  /blockchains/{bid}/concord/contracts/{contract_address}:
    put:
      tags:
        - contracts
      summary: Verify a contract identified by given `contract_address`
      operationId: PutContractByIdAndVersionBlk
      parameters:
        - name: bid
          in: path
          description: Blockchain ID
          required: true
          schema:
            type: string
            format: uuid
        - name: contract_address
          in: path
          description: The address of the contract
          required: true
          schema:
            type: string
            format: string
          style: simple
      requestBody:
        description: Verify contract PUT request body
        content:
          application/json:
            schema:
              type: object
              required:
                - contract_id
                - compiler_version
                - sourcecode
                - contract_name
              properties:
                contract_id:
                  type: string
                  description: String representing contract name
                compiler_version:
                  type: string
                  description: String representing solc version you used to deploy the contract
                sourcecode:
                  type: string
                  description: String representing solidity source code of this version
                contract_name:
                  type: string
                  description: String representing contract name you used to deploy the contract
                is_optimize:
                  type: boolean
                  description: True if using the optimizer. False otherwise
                runs:
                  type: string
                  description: String representing optimize for how many times you intend to run the code
        required: true
      responses:
        200:
          description: All details of a particular version of this particular contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract_id:
                    type: string
                    description: String representing id of this contract
                  owner:
                    type: string
                    description: String representing address of the owner of this contract
                  version:
                    type: string
                    description: String representing name of this version
                  metadata:
                    type: object
                    description: A metadata JSON object about source code of this version generated by solidity compiler
                  address:
                    type: string
                    description: String representing address at which this version is deployed
                  bytecode:
                    type: string
                    description: String representing compiled bytecode of this version
                  sourcecode:
                    type: string
                    description: String representing the actual source code of this version

  /blockchains/{bid}/clients:
    summary: Client GET/POST API
    get:
      tags:
        - blockchains
      summary: List all client nodes
      operationId: getClients
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns a list of all client nodes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Client Id
                    public_ip:
                      type: string
                      format: ip
                      description: Public IP
                    private_ip:
                      type: string
                      format: ip
                      description: Private IP
                    name:
                      type: string
                      description: Host Name
                    url:
                      type: string
                      description: URL
                    cert:
                      type: string
                      description: Cert
                    zone_id:
                      type: string
                      format: uuid
                      description: Zone ID
                    auth_url_jwt:
                      type: string
                    group_id:
                      type: string
                      format: uuid
                      description: Logical group Id
                    group_name:
                      type: string
                      description: User defined Group Name

  /blockchains/{bid}/clients/{client_id}/credentials:
    get:
      tags:
        - blockchains
      summary: Get credentials for given client
      operationId: getClientCredentials
      parameters:
        - name: bid
          required: true
          in: path
          description: Blockchain ID
          schema:
            type: string
            format: uuid
        - name: client_id
          required: true
          in: path
          description: Client ID
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Client username
                  password:
                    type: string
                    description: Client password
  /consortiums:
    summary: GetConsortium
    get:
      tags:
        - profiles
      summary: List all accessible consortiums
      operationId: getConsortiums
      responses:
        200:
          description: Returns a list of all accessible consortiums
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    consortium_id:
                      type: string
                      format: uuid
                      description: Consortium ID
                    consortium_name:
                      type: string
                      format: string
                      description: Name of Consortium
    post:
      tags:
        - profiles
      summary: Creates a new Consortium
      operationId: consortiumPost
      requestBody:
        description: New consortium POST request body
        content:
          application/json:
            schema:
              type: object
              required:
                - consortium_name
              properties:
                consortium_name:
                  type: string
                  format: string
                  description: Name of consortium
                consortium_type:
                  type: string
                  format: string
                  description: Type of consortium
                organization:
                  type: string
                  format: UUID
                  description: Organization that the consortium is a part of
      responses:
        200:
          description: Returns the consortium ID and Name
          content:
            application/json:
              schema:
                type: object
                properties:
                  con_id:
                    type: string
                    format: UUID
                    description: Consortium ID
                  consortium_name:
                    type: string
                    format: string
                    description: Consortium Name
  /consortiums/{con_id}:
    summary: GetConsortium_byID
    get:
      tags:
        - profiles
      summary: Get Consortium by its ID
      operationId: getConsortium
      parameters:
        - name: con_id
          in: path
          description: Consortium ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns the specified consortium
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    org_id:
                      type: string
                      format: uuid
                      description: Consortium ID
                    organization_name:
                      type: string
                      format: string
                      description: Name of Consortium
    patch:
      tags:
        - profiles
      summary: Update an existing consortium
      operationId: consortiumPatch
      parameters:
        - name: con_id
          in: path
          description: Consortium ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Consortium items to patch
        content:
          application/json:
            schema:
              type: object
              properties:
                consortium_name:
                  type: string
                  format: string
                  description: Name of consortium
                consortium_type:
                  type: string
                  format: string
                  description: Type of consortium
                orgs_to_add:
                  type: array
                  items:
                    type: string
                    format: uuid
                    description: Organizations to add as members of this consortium
                orgs_to_remove:
                  type: array
                  items:
                    type: string
                    format: uuid
                    description: Organizations to remove as members of this consortium
        required: true
      responses:
        200:
          description: Returns the Consortium ID and Name
          content:
            application/json:
              schema:
                type: object
                properties:
                  con_id:
                    type: string
                    format: uuid
                    description: Consortium ID
                  consortium_name:
                    type: string
                    format: string
                    description: Consortium Name
                  organization:
                    type: string
                    format: uuid
                    description: Owning organization
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        org_id:
                          type: string
                          format: uuid
                          description: Organization Id
                        organization_name:
                          type: string
                          description: Organization name
  /consortiums/{con_id}/organizations:
    summary: Get consortium members
    get:
      tags:
        - profiles
      summary: Get Consortium Members
      operationId: getConsortiumMembers
      parameters:
        - name: con_id
          in: path
          description: Consortium ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns the members of the specified consortium
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    org_id:
                      type: string
                      format: uuid
                      description: Organization Id
                    organization_name:
                      type: string
                      description: Organization name
  /organizations:
    summary: GetOrganization
    get:
      tags:
        - profiles
      summary: List all organizations
      operationId: getOrganizations
      responses:
        200:
          description: Returns a list of all organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    organizationId:
                      type: string
                      format: uuid
                      description: Organization ID
                    organization_name:
                      type: string
                      format: string
                      description: Name of organization
  /organizations/{org_id}:
    summary: GetOrganization_byid
    get:
      tags:
        - profiles
      summary: Get Organization by its id
      operationId: getOrganization
      parameters:
        - name: org_id
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns the specified organization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    org_id:
                      type: string
                      format: uuid
                      description: Organization ID
                    organization_name:
                      type: string
                      format: string
                      description: Name of organization
    patch:
      summary: Update an existing organization
      operationId: organizationPatch
      parameters:
        - name: org_id
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Organization items to patch
        content:
          application/json:
            schema:
              type: object
              properties:
                add_properties:
                  type: object
                  additionalProperties:
                    type: string
                delete_properties:
                  type: object
                  additionalProperties:
                    type: string
        required: true
      responses:
        200:
          description: Returns the organization ID and Name
          content:
            application/json:
              schema:
                type: object
                properties:
                  org_id:
                    type: string
                    format: uuid
                    description: Organization ID
                  OrganizationName:
                    type: string
                    format: string
                    description: Organization Name
  /tasks:
    summary: Get all Tasks
    get:
      tags:
        - tasks
      summary: Get the statuses of all tasks
      operationId: listTask
      responses:
        200:
          description: Returns the current task status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: string
                      format: uuid
                      description: Task ID
                    state:
                      type: string
                      enum:
                        - RUNNING
                        - SUCCEEDED
                        - FAILED
                      description: Current state of of the task
                    message:
                      type: string
                      description: Additional information from the task
                    resource_id:
                      type: string
                      format: uuid
                      description: The resoruce created or updated by this task.  May not be accurate until state is FAILED or SUCCEEDED.
                    resource_link:
                      type: string
                      format: uri
                      description: Link to the resource created or updated by this task.
    post:
      tags:
        - tasks
      summary: Get the statuses of listed tasks
      operationId: getTaskList
      parameters:
        - name: get_state
          in: query
          description: Get states
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: List of task ids
        content:
          application/json:
            schema:
              type: object
              properties:
                task_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        200:
          description: Returns the current task status
          content:
            application/json:
              schema:
                type: object
                properties:
                  states:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: string
                          format: uuid
                          description: Task ID
                        state:
                          type: string
                          enum:
                            - RUNNING
                            - SUCCEEDED
                            - FAILED
                          description: Current state of of the task
                        message:
                          type: string
                          description: Additional information from the task
                        resource_id:
                          type: string
                          format: uuid
                          description: The resoruce created or updated by this task.  May not be accurate until state is FAILED or SUCCEEDED.
                        resource_link:
                          type: string
                          format: uri
                          description: Link to the resource created or updated by this task.
  /tasks/{task_id}:
    summary: Tasks
    get:
      tags:
        - tasks
      summary: Get the status of the specified task
      operationId: getTask
      parameters:
        - name: task_id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns the current task status
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                    format: uuid
                    description: Task ID
                  state:
                    type: string
                    enum:
                      - RUNNING
                      - SUCCEEDED
                      - FAILED
                    description: Current state of of the task
                  message:
                    type: string
                    description: Additional information from the task
                  resource_id:
                    type: string
                    format: uuid
                    description: The resoruce created or updated by this task.  May not be accurate until state is FAILED or SUCCEEDED.
                  resource_link:
                    type: string
                    format: uri
                    description: Link to the resource created or updated by this task.
  /users:
    summary: Helen User management
    get:
      summary: Get a list of user which belong to specific organization and specific consortium
      operationId: usersGet
      parameters:
        - in: query
          name: consortium
          description: ID of the consortium
          required: true
          schema:
            type: string
        - in: query
          name: organization
          description: ID of the organization
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a list of all users who are part of given consortium and given organization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      format: uuid
                      description: UUID value representing ID of this user
                    name:
                      type: string
                      description: String representing name of this user
                    email:
                      type: string
                      description: String representing email of this user
                    role:
                      type: string
                      description: String representing role of this user
                    last_login:
                      type: integer
                      description: Integer value representing the time (in milliseconds since epoch) when this user last logged in
                    details:
                      type: object
                      properties:
                        first_name:
                          type: string
                          description: First name of this user
                        last_name:
                          type: string
                          description: Last name of this user
                    consortium:
                      type: object
                      properties:
                        consortium_id:
                          type: string
                          format: uuid
                          description: ID of consortium to which this user belongs
                        consortium_name:
                          type: string
                          description: Name of consortium to which this user belongs
                    organization:
                      type: object
                      properties:
                        organization_id:
                          type: string
                          format: uuid
                          description: ID of organization to which this user belongs
                        organization_name:
                          type: string
                          description: Name of organization to which this user belongs
  /users/{user_id}:
    summary: Helen User management
    get:
      tags:
        - profiles
      summary: Get the user identified by given user_id
      operationId: GetUserById
      parameters:
        - name: user_id
          in: path
          description: The id of the user to get
          required: true
          schema:
            type: string
            format: uuid
          style: simple
      responses:
        200:
          description: Returns a json object describing specified user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    format: uuid
                    description: UUID value representing ID of this user
                  name:
                    type: string
                    description: String representing name of this user
                  email:
                    type: string
                    description: String representing email of this user
                  role:
                    type: string
                    description: String representing role of this user
                  last_login:
                    type: integer
                    description: Integer value representing the time (in milliseconds since epoch) when this user last logged in
                  details:
                    type: object
                    properties:
                      first_name:
                        type: string
                        description: First name of this user
                      last_name:
                        type: string
                        description: Last name of this user
                  consortium:
                    type: object
                    properties:
                      consortium_id:
                        type: string
                        format: uuid
                        description: ID of consortium to which this user belongs
                      consortium_name:
                        type: string
                        description: Name of consortium to which this user belongs
                  organization:
                    type: object
                    properties:
                      organization_id:
                        type: string
                        format: uuid
                        description: ID of organization to which this user belongs
                      organization_name:
                        type: string
                        description: Name of organization to which this user belongs
  /oauth/token:
    summary: Return token information of logged in user
    get:
      tags:
        - profiles
      operationId: OauthToken
      responses:
        200:
          description: Returns information of the currently logged in user
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                    description: Current Authentication token as JWT
                  id_token:
                    type: string
                    description: Open ID token
                  email:
                    type: string
                    description: User account
                  last_login:
                    type: integer
                    description: Last login time


  /blockchains/nodesizetemplate:
    summary: API to get and set node sizing templates.
    get:
      tags:
        - blockchains
      operationId: getTemplate
      responses:
        200:
          $ref: '#/components/responses/NodeSizeTemplateGetResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

components:
  schemas:
    Error:
      type: object
      properties:
        errorCode:
          type: string
          description: Error Code
        errorMessage:
          type: string
          description: Localized error message
        status:
          type: integer
          description: HTTP status code
        path:
          type: string
          description: URI causing error

    BaseZone:
      type: object
      required:
        - name
        - type
      properties:
        type:
          type: string
          enum: [VMC_AWS, ON_PREM]
          example:
            ON_PREM
        name:
          type: string
          example: VMC SDDC2
        latitude:
          type: string
          example: 45.2551139
        longitude:
          type: string
          example: -120.888727

    BaseZoneGet:
      type: object
      properties:
        id:
          type: string
          format: uuid
      allOf:
        - $ref: '#/components/schemas/BaseZone'

    OnPremZonePost:
      type: object
      required:
        - vcenter
        - network
        - resource_pool
        - storage
        - folder
      allOf:
        - $ref: '#/components/schemas/BaseZone'
      properties:
        vcenter:
          $ref: '#/components/schemas/PostEndpoint'
        network:
          $ref: '#/components/schemas/Network'
        outbound_proxy:
          $ref: '#/components/schemas/OutboundProxy'
        resource_pool:
          type: string
          description: Name of resource pool to use for deployment
          example:
            Resource Pool
        storage:
          type: string
          description: Name of storage to use for deployment
          example:
            Datastore
        folder:
          type: string
          description: vCenter folder for deployment
          example:
            Blockchain Folder
        container_repo:
          $ref: '#/components/schemas/PostEndpoint'
        log_managements:
          $ref: '#/components/schemas/OnPremLogManagementsPost'
        wavefront:
          $ref: '#/components/schemas/WavefrontData'
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchData'

    OnPremZoneGet:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseZone'
      properties:
        id:
          type: string
          format: uuid
          description: Zone ID
        org_id:
          type: string
          format: uuid
          description: Organization ID
        vcenter:
          $ref: '#/components/schemas/GetEndpoint'
        network:
          $ref: '#/components/schemas/Network'
        outbound_proxy:
          $ref: '#/components/schemas/OutboundProxy'
        resouce_pool:
          type: string
          description: Name of resource pool to use for deployment
          example:
            Resource Pool
        storage:
          type: string
          description: Name of storage to use for deployment
          example:
            Datastore
        folder:
          type: string
          description: vCenter folder for deployment
          example:
            Blockchain Folder
        container_repo:
          $ref: '#/components/schemas/GetEndpoint'
        log_managements:
          $ref: '#/components/schemas/OnPremLogManagementsGet'
        wavefront:
          $ref: '#/components/schemas/WavefrontData'
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchData'

    # Swagger viewer does not display discriminated types correctly.  Temporarily changing this to allOf
    # just to get the fields listed
    #    Zone:
    #      type: object
    #      discriminator:
    #        propertyName: type
    #      oneOf:
    #        - $ref: '#/components/schemas/BaseZoneGet'
    #        - $ref: '#/components/schemas/OnPremZoneGet'

    Zone:
      type: object
      allOf:
        - $ref: '#/components/schemas/OnPremZoneGet'

    PostEndpoint:
      type: object
      properties:
        url:
          type: string
          description: URL of endpoint
          example:
            https://service.com
        username:
          type: string
          description: Username for credentials
          example:
            user@server.com
        password:
          type: string
          description: Password for credentials
          example:
            p4$$w0rd

    GetEndpoint:
      type: object
      properties:
        url:
          type: string
          description: URL of endpoint
          example:
            https://service.com
        username:
          type: string
          description: Username for credentials
          example:
            user@server.com

    Network:
      type: object
      properties:
        name:
          type: string
          description: Name of network to use
          example:
            Blockchain Network
        ip_pool:
          type: array
          description: IP pool list
          example:
            [10.1.1.16-10.1.1.64,10.1.1.100-10.1.1.200,10.1.1.253]
          items:
            type: string
        gateway:
          type: string
          description: Gateway IP address
          example:
            10.1.1.124
        subnet:
          type: string
          description: IP Subnet
          example:
            24
        name_servers:
          type: array
          description: List of name servers
          example:
            [10.1.1.10, 10.1.1.11]
          items:
            type: string

    WavefrontData:
      description: Configurations for wavefront setup
      type: object
      properties:
        url:
          type: string
          description: Endpoint of wavefront setup.
          example: https://example.com
        token:
          type: string
          description: Auth token provided by wavefront
          example: <random-token>

    ElasticsearchData:
      description: Configurations for elasticsearch setup
      type: object
      properties:
        url:
          type: string
          description: Endpoint of elasticsearch setup.
          example: https://example.com
        username:
          type: string
          description: username with access to elasticsearch endpoint.
          example: user1
        password:
          type: string
          description: password of user for elasticsearch endpoint.
          example: mypassword

    OnPremLogManagementsPost:
      description: List of configurations for logging setup
      type: array
      items:
        type: object
        properties:
          destination:
            type: string
            description: |
              Log destination. Currently supported options - "LOG_INTELLIGENCE" or "LOG_INSIGHT"
            enum: [LOG_INTELLIGENCE, LOG_INSIGHT]
            example: LOG_INSIGHT
          address:
            type: string
            description: Endpoint of the logging setup (URL or IP address).
            example: 10.70.200.100
          port:
            type: integer
            description: Port associated with the address, on which logs are ingested
            example: 9000
          username:
            type: string
            description: Username to be used for authentication when sending logs to destination
            example: foobar
          password:
            type: string
            description: Password to be used for authentication when sending logs to destination
            example: P@$$
          log_insight_agent_id:
            type: integer
            description: ID of an agent setup for Log Insight
            example: 100

    OnPremLogManagementsGet:
      description: Available logging setup
      type: array
      items:
        type: object
        properties:
          destination:
            type: string
            description: Log destination
            enum: [LOG_INTELLIGENCE, LOG_INSIGHT]
            example: LOG_INSIGHT
          address:
            type: string
            description: Endpoint of the logging setup
            example: 10.70.200.100
          port:
            type: integer
            description: Port associated with the address, on which logs are ingested
            example: 9000

    OutboundProxy:
      description: Outbound Proxy information
      type: object
      properties:
        httpHost:
          type: string
          description: Address for the HTTP Host
          example: 1.2.3.4
        httpPort:
          type: integer
          description: Port for the HTTP Host
          example: 80
        httpsHost:
          type: string
          description: Address for the HTTPS Host
          example: 1.2.3.4
        httpsPort:
          type: integer
          description: Port for the HTTPS Host
          example: 80

    ClientNode:
      description: Client Proxy information
      type: object
      properties:
        zone_id:
          type: string
          format: uuid
          description: ID of owning consortium
        auth_url_jwt:
          type: string
          description: Username for credentials
          example:
            user@server.com
        group_name:
          type: string
          description: User supplied group name
        sizing_info:
          type: object
          description: Sizing info of clients
          items:
            $ref: '#/components/schemas/SizingInfo'

    ReplicaNode:
      description: Replica Proxy information
      type: object
      properties:
        zone_id:
          type: string
          format: uuid
          description: ID of owning consortium
        sizing_info:
          type: object
          description: Sizing info of replicas
          items:
            $ref: '#/components/schemas/SizingInfo'


    SizingInfo:
      description: Details of sizing info
      type: object
      additionalProperties:
        type: string
        example:
          type: committer
          no_of_cpus: 1
          storage_in_gigs: 1024
          memory_in_gigs: 64

    SizingTemplate:
      description: A template with node sizing params for each type.
      type: object
      properties:
        name:
          type: string
          description: Name for this template item.
        items:
          description: A template item.
          type: array
          items:
            $ref: '#/components/schemas/SizingTemplateItem'

    SizingTemplateItem:
      description: Details of sizing template.
      type: object
      additionalProperties:
        type: string
        example:
          type: committer
          no_of_cpus: 1
          storage_in_gigs: 1024
          memory_in_gigs: 64

    ThresholdMap:
      description: Map of threshold values for parameters.
      type: string
      example:
        min: 1
        max: 64



  responses:
    ErrorResponse:
      description: Error Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ZoneListResponse:
      description: List of available zones
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BaseZoneGet'

    ZoneGetResponse:
      description: Get Zone information details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Zone'

    BlockchainGetResponse:
      description: Returns the specified blockchain
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: Blockchain ID
              consortium_id:
                type: string
                format: uuid
                description: ID of owning consortium
              blockchain_type:
                type: string
                enum:
                  - ETHEREUM
                  - DAML
                  - HLF
                description: Type of blockchain node
              blockchain_state:
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
                  - FAILED
                description: Current state of blockchain
              version:
                type: string
                description: Provides version information of the blockchain
              created_by:
                type: string
                description: User alias who created the blockchain
              created:
                type: string
                description: Timestamp when created.

    NodeSizeTemplateGetResponse:
      description: Return either a default template, or an organization specific template if available.
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: Template Id
              name:
                type: string
                description: Template Name
              templates:
                description: List of sizing templates for each type
                type: array
                items:
                  $ref: '#/components/schemas/SizingTemplate'
              range:
                description: A range of values for each node sizing template parameter.
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ThresholdMap'

    DependentNodesGetResponse:
      description: Object containing the Replica and Client IDs for the given On Prem Zone
      content:
        application/json:
          schema:
            type: object
            properties:
              replica_list:
                type: array
                description: List of replica IDs on the zone.
                example: [9ecb07bc-482c-48f3-80d0-23c4f9514902, 9acb07bc-482c-48f3-80d0-23c4f9514902]
                items:
                  type: string
                  format: uuid
              client_list:
                type: array
                description: List of client IDs on the zone.
                example: [9ecaa7bc-482c-48f3-80d0-23c4f9514902, 9acb07bc-abcd-48f3-80d0-23c4f9514902]
                items:
                  type: string
                  format: uuid

  requestBodies:
    CreateZoneRequest:
      description: Create a new zone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnPremZonePost'

    PatchZoneRequest:
      description: Patch an existing zone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnPremZonePost'

  parameters:
    ZoneId:
      name: zone_id
      in: path
      description: The id of the on-premises zone to get
      required: true
      schema:
        type: string
        format: uuid
