FROM athena-docker-local.artifactory.eng.vmware.com/build-images/maven-builder:v1

# env variable for parameterizing application profile
ENV APPCONTEXT test

# config volume for exposing app profiles
VOLUME ["/config"]

#Install provisioning service dev certs in local trustore
USER root
RUN sed -i -e 's/archive.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list \
    && sed -i -e 's/security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list \
    && apt-get update \
    && apt-get install --no-install-recommends -y wget \
    && wget --directory-prefix=/tmp/ https://vmbc-saas.s3.us-east-2.amazonaws.com/cacerts/ps-dev.crt \
    && keytool -import -trustcacerts -cacerts -storepass changeit -noprompt -alias ps-dev-cert -file /tmp/ps-dev.crt

# Switch to a user different than root.
RUN chown -R test:test .
USER test

# Build helen module.
COPY ./helen/src ./helen/src

## Runtime image.
FROM athena-docker-local.artifactory.eng.vmware.com/vmbc-photon-3:1.0.2
LABEL description="Blockchain Management Service (Helen)"

WORKDIR /helen
COPY ./helen/src/main/resources/application.properties ./application.properties
COPY ./helen/src/main/resources/database/schema.sql ./db-schema.sql
COPY ./helen/wait-for-it.sh ./wait-for-it.sh
COPY ./helen/target/blockchain-helen-1.0-SNAPSHOT.jar ./blockchain-helen.jar

CMD ["java", "-Dspring.config.location=/config/app/profiles/,./", "-Dspring.profiles.active=${APPCONTEXT}", "-jar", "blockchain-helen.jar"]

EXPOSE 8080
