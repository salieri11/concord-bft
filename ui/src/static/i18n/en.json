{
  "title": "VMware Blockchain",
  "subTitle": "Blockchain as a Service",
  "common": {
    "add": "Add",
    "all": "All",
    "back": "Back",
    "download": "Download",
    "cancel": "Cancel",
    "clone": "Clone",
    "close": "Close",
    "copyToClip": "Copy to clipboard",
    "copyAll": "Copy All",
    "countNoun": "Count",
    "cpu": "vCPU",
    "create": "Create",
    "custom": "Custom",
    "delete": "Delete",
    "deploy": "Deploy",
    "edit": "Edit",
    "fail": "Fail",
    "finish": "Finish",
    "help": "Need Help? Email",
    "id": "ID",
    "invite": "Invite",
    "loading": "Loading",
    "minMax": "Min: {{ min }} Max: {{ max }}",
    "name": "Name",
    "next": "Next",
    "optional": "Optional",
    "password": "Password",
    "port": "Port",
    "portPh": "8080",
    "ram": "Memory",
    "requiredValidationMessage": "This field is required",
    "search": "Search",
    "skip": "Skip",
    "submit": "Submit",
    "storage": "Storage",
    "success": "Success",
    "token": "Token",
    "tlsCert": "TLS Certificate",
    "update": "Update",
    "url": "URL",
    "urlPh": "https://<endpoint>",
    "username": "Username",
    "usernamePh": "username",
    "verify": "Verify"
  },
  "error": {
    "title": "Error",
    "timeout": "Deploying consortium timed out, please contact blockchain-support@vmware.com to report this issue.",
    "help": "Please contact blockchain-support@vmware.com if the problem persists.",
    "403": "You are unable to access this service, please contact your service owner for more information."
  },
  "formCommon": {
    "commaSeperated": "Use comma separated values, no spaces."
  },
  "nav": {
    "personaSelector": {
      "title": "Role"
    },
    "actions": {
      "title": "Actions",
      "resetTasks": "Reset Tasks"
    },
    "consortium": "Current Consortium",
    "deploy": "Deploy Consortium",
    "zones": "Zones",
    "dashboard": "Dashboard",
    "organizations": "Organizations/Users",
    "nodeList": "Nodes",
    "blockList": "Block Explorer",
    "transactionList": "Transactions",
    "testing": "Testing",
    "smartContracts": "Smart Contracts",
    "logsAndAnalysis": "Logs And Analysis",
    "details": "Blockchain Details",
    "developer": {
      "header": "DEVELOPER",
      "logs": "Logs",
      "docs": "Documentation",
      "api": "APIs",
      "samples": "Samples"
    },
    "sysadmin": {
      "header": "SYSTEM ADMIN",
      "consortiums": "Consortiums",
      "tasks": "Active Tasks",
      "features": "Features",
      "roles": "Role Assignment",
      "env": "Environment"
    },
    "organization": "Organizations",
    "blockchains": "Blockchains",
    "kubernetes": "Kubernetes",
    "users": "Users",
    "login": "Login",
    "logOut": "Log Out",
    "settings": "Settings"
  },
  "time": {
    "lastXDays": "Last {{number}} Days",
    "today": "Today"
  },
  "authentication": {
    "welcome": "Welcome to",
    "username": "Username",
    "password": "Password",
    "newPassword": "New Password",
    "confirmPassword": "Confirm Password",
    "next": "Next",
    "errorMessage": "Invalid user name or password",
    "changePassword": "Change Password",
    "passwordReq": "Password must be 6 to 35 characters and contain at least one numeric digit, one uppercase letter, one lowercase letter and one special character."
  },
  "grid": {
    "search": {
      "placeholder": "Search"
    },
    "pagination": {
      "of": "of"
    }
  },
  "confirmModal": {
    "title": "Confirm",
    "delete": "Are you sure you want to delete this?"
  },
  "marketing": {
    "subTitle": "Deploy The Industry's Most Advanced Permissioned Blockchains",
    "description": "The VMware Blockchain delivers the fastest TPS in the industry. Deploy and Manage Concord and Hyperledger for your consortium and organizations today.",
    "callToAction": "Get Started",
    "midHeading": "Get the most advanced enterprise blockchain",
    "itemOne": {
      "title": "Leading Consensus Protocol",
      "description": "With the highest transactions per second and fastest time to finality."
    },
    "itemTwo": {
      "title": "Enhanced Security",
      "description": "Deploy across multiple cloud providers, permissioned blockchain nodes and networks using advanced cryptographic techniques."
    },
    "itemThree": {
      "title": "Cost Effective and Greener Solutions",
      "description": "Say goodbye to the high capital investment of proof of work.  Say goodbye to the high C02 with proof of stake."
    }
  },
  "signUp": {
    "description": "VMware Blockchain delivers the industries most advanced blockchain with the SBFT protocol.",
    "callToAction": "Complete your information to get started.",
    "duplicateEmailError": "This email has already been used, please login.",
    "form": {
      "firstName": "First Name",
      "lastName": "Last Name",
      "email": "Email",
      "password": "Password",
      "emailValMsg": "Please enter a valid email address",
      "company": "Company",
      "jobTitle": "Job Title (Optional)",
      "country": "Country",
      "relationship": "Relationship with VMware",
      "relationshipOptions": {
        "customer": "Customer",
        "employee": "Employee",
        "ecosystem": "Ecosystems Partner",
        "solutions": "Solution Provider",
        "service": "Service Provider",
        "reseller": "Reseller Partner",
        "other": "Other"
      },
      "numberOfEmployees": "Number of Employees",
      "submit": "Sign Up"
    }
  },
  "agreement": {
    "title": "Legal Agreement",
    "accept": "Accept",
    "firstName": "First Name",
    "lastName": "Last Name",
    "company": "Company"
  },
  "expectations": {
    "title": "Service Availability Expectations",
    "one": "i. The primary purpose of the PoC-grade VMware Blockchain service is to allow development and porting of Ethereum compatible DApps on the VMware blockchain stack, allowing developers to get familiar with our stack and allowing VMware to find and fix any compatibility issues. VMware will make every attempt to resolve any issues found as quickly as possible and provide a new build on the service, so DApp development is not blocked.",
    "two": "ii. In-place upgrades are currently not supported on the service. A new build will be delivered by creating an entirely new blockchain stack with a new URL for the UI and API endpoint. This means that any data saved on the old stack will be lost and developers are strongly encouraged to have their own data setup automation, so they can start using the new build quickly.",
    "three": "iii. The service does not currently support graceful recovery from crashes. This means that there is the possibility of data corruption and loss on a crash of any sort. In the event of an unrecoverable crash, the VMware team will provide developers with a new blockchain instance which will also require data set up by the developer.",
    "four": "iv. Sensitive data requiring a high level of security must not be kept in the PoC-grade service. Developers should use dummy data sets to develop and test their applications."
  },
  "dashboard": {
    "consortium": "Consortium",
    "consortiumId": "Consortium ID",
    "blockchain": "Blockchain",
    "blockchainId": "Blockchain ID",
    "organization": "Organization",
    "organizationId": "Organization ID",
    "totalActiveNodes": "Total Active Replicas",
    "inactiveNodes": "Inactive Replicas",
    "nodeHealth": "Replica Health",
    "nodeId": "Replica ID",
    "deployedContracts": "Contracts",
    "transactionsPerSecond": "Transactions/second",
    "averageValidationTime": "Avg Validation Time",
    "xSeconds": "{{seconds}} <small>seconds</small>"
  },
  "filters": {
    "filterTransactions": "Filter Transactions",
    "byStatus": "By Status",
    "pendingTransactions": "Pending Transactions",
    "byTransactionType": "By Transaction Type",
    "allTransactions": "All Transactions",
    "byDateRange": "By Date Range",
    "byOwner": "By Owner",
    "allOwners": "All Owners",
    "cancel": "Cancel",
    "apply": "Apply"
  },
  "nodes": {
    "title": "Replica",
    "nodes": "Nodes",
    "committer": "Replica",
    "committerName": "Replica Name",
    "committers": "Replicas",
    "client": "Client",
    "clientName": "Client Name",
    "clientId": "Client ID",
    "clients": "Clients",
    "deployClient": "Deploy Client Node",
    "deployingClient": "Deploying Client Node",
    "deployingClientDesc": "Client node deploying to zone:",
    "deployClientSuccess": "Client node deployment success!",
    "deployClientFailed": "Client node deployment failed. Task ID:",
    "nodeActivity": "Replica Activity",
    "overallNodeHealth": "Overall Replica Health",
    "transactionsPerSecond": "Transactions/second",
    "averageValidationTime": "Avg Validation Time",
    "xSeconds": "{{seconds}} <small>seconds</small>",
    "groupName": "Group Name",
    "groupID": "Group ID",
    "getCert": "Download Certificate",
    "start": "Start",
    "stop": "Stop",
    "restart": "Restart",
    "status": "Status",
    "live": "Live",
    "offline": "Offline",
    "totalActiveNodes": "Total Active Replicas",
    "inactiveNodes": "Inactive Replicas",
    "searchPlaceholder": "Search...",
    "filters": "Filters",
    "hostname": "Name",
    "health": "Health",
    "healthy": "healthy",
    "unhealthy": "unhealthy",
    "address": "Public IP",
    "addressPrivate": "Private IP",
    "url": "Url",
    "endpoint": "Endpoint",
    "zone": "Zone",
    "zoneId": "Zone ID",
    "viewDetail": "View Detail",
    "network": "Network",
    "transactions": "Transactions",
    "timestamp": "Timestamp",
    "origination": "Origination",
    "transaction": "Transaction",
    "type": "Type",
    "amount": "Amount",
    "trans": "Trans",
    "length": "Length",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} replicas",
    "clientPaginationSummary": "{{start}} - {{finish}} of {{total}} clients",
    "confirmModal": {
      "title": "Confirm Replica Action",
      "confirm": "REPLICA STOP",
      "body": "Please type REPLICA STOP to confirm replica stoppage.",
      "placeholder": "Type confirmation here"
    },
    "deployClientModal": {
      "highAvailability": "High Availability",
      "highAvailabilityDesc": "Two clients nodes to ensure high availability",
      "clientNodeNamePlaceholder": "Client Node 1",
      "authUrl": "Auth URL",
      "authUrlPlaceholder": "https://<JWKS-endpoint>",
      "authUrlDesc": "URL that returns JWT public key",
      "authUrlError": "The supplied URL is not valid"
    }
  },
  "blocks": {
    "title": "Block",
    "block": "Block",
    "blocks": "Blocks",
    "currentBlock": "Current Block",
    "blockActivity": "Block Activity",
    "number": "Block Number",
    "index": "Index",
    "hash": "Hash",
    "blockHash": "Block Hash",
    "parentHash": "Parent Block Hash",
    "txcount": "Tx Count",
    "timestamp": "Timestamp",
    "next": "Next",
    "viewDetail": "View Detail",
    "transactions": "Transactions",
    "genesisBlock": "Genesis Block",
    "explorer": "Block Explorer",
    "search": "Search",
    "searchClear": "Clear Search Results",
    "searchNotFound": "No Block Found",
    "searchInputNotValid": "Input Is Not Valid",
    "searchPlaceholder": "Search by Block Number or Hash",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} blocks"
  },
  "transactions": {
    "title": "Transaction",
    "transactions": "Transactions",
    "recentTransactions": "Recent Transactions",
    "timestamp": "Timestamp",
    "origination": "Origination",
    "transactionType": "Transaction Type",
    "amount": "Amount",
    "transactionLength": "Trans Length",
    "status": "Status",
    "success": "Success",
    "failure": "Failure",
    "none": "null",
    "nodes": "Replicas",
    "hash": "Hash",
    "txhash": "Tx Hash",
    "from": "From",
    "to": "To",
    "contractAddress": "Contract Address",
    "input": "Input",
    "value": "Value",
    "nonce": "Nonce",
    "parentHash": "Parent Hash",
    "parentBlock": "Parent Block",
    "blockLocation": "Block Location",
    "locatedInBlock": "In Block",
    "size": "Size",
    "contract": "Contract",
    "associatedContract": "Associated Contract",
    "associatedContractRegisteredAs": "Registered as",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} transactions",
    "inputView": {
      "default": "Default View",
      "original": "Original (ByteCode)",
      "decompile": "Decompiled",
      "opcode": "Assembly",
      "utf8": "UTF-8"
    }
  },
  "testing": {
    "testingGround": "Testing Ground",
    "transactionCreation": "Transaction Creation",
    "smartContractUpload": "Smart Contract Upload",
    "transactionCreationHint": "Enter data below to generate a unique hash",
    "smartContractHint": "Upload file below to generate a unique hash",
    "action": "Action",
    "submit": "Submit",
    "submitContract": "Submit Contract",
    "from": "From",
    "to": "To",
    "value": "Value",
    "data": "Data",
    "transaction": "Transaction",
    "call": "Call",
    "copy": "Copy",
    "file": "File",
    "contractAddress": "Contract Address:",
    "transactionHash": "Transaction Hash:",
    "result": "Result:"
  },
  "smartContracts": {
    "contracts": "Contracts",
    "activeContracts": "Active Contracts",
    "contractId": "Contract ID",
    "smartContracts": "Smart Contracts",
    "smartContractUpload": "Upload Smart Contracts",
    "contractOwnerAddress": "Contract Owner Address",
    "createContract": "Deploy Contract",
    "updateContract": "Update Contract",
    "verifyContract": "Verify Contract",
    "createContractError": "There was an error uploading your contract. Please correct any errors and try again:",
    "viewDetail": "View Details",
    "name": "Name",
    "namePlaceholder": "MyContract",
    "owner": "Owner",
    "file": "File",
    "preview": "Preview",
    "connectWithTruffle": "Connect With Truffle",
    "externalSourceWarning": "This contract version was deployed from an external source and therefore has no associated sourcecode or metadata.You can verify and publish the contract source code.",
    "externalSourceUpload": "Verify",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} contracts",
    "version": {
      "title": "Version",
      "version": "Version",
      "compilerVersion": "Solidity Compiler Version",
      "optimizer": "Optimize",
      "packageId": "Package ID",
      "runs": "Runs",
      "placeholder": "1.0",
      "address": "Address",
      "functions": "Functions",
      "templates": "Templates",
      "gas": "Gas",
      "value": "Value",
      "from": "From",
      "call": "Call",
      "send": "Send",
      "emptyResponse": "Empty Response",
      "returnValues": "Return Values",
      "decoded": "Decoded:",
      "raw": "Raw:",
      "transaction": "Transaction",
      "preview": "Preview",
      "selectVersion": "Select Version",
      "addressHelper": "This is your address",
      "functionParameters": "Function Parameters",
      "templateParameters": "Template Create Inputs",
      "parameterHelper": "Parameter Required By Function",
      "arrayParameterHelper": "To add multiple array values, enter each one on a new line",
      "download": "Download",
      "inputTypeHelper": "Expected value should be: {{type}}",
      "addressLengthValidationMessage": "Must be 42 characters long",
      "addressPatternValidationMessage": "Must be a valid hexadecimal address",
      "inputUIntValidationMessage": "Must be a valid unsigned integer value",
      "inputSignedIntValidationMessage": "Must be a valid signed integer value",
      "inputByteLengthValidationMessage": "Invalid byte length for input",
      "inputByteArrayByteLengthValidationMessage": "One or more values in this array have an incorrect byte length",
      "inputArrayLengthValidationMessage": "The array has an invalid length",
      "tabs": {
        "execute": "Run",
        "source": "Source",
        "metadata": "Metadata",
        "bytecode": "Bytecode"
      },
      "tooltips": {
        "contractAddress": "Contract Address",
        "availableActions": "Available Contract Actions",
        "requiredParameters": "Required Function Parameters",
        "verified": "Verified smart contract",
        "callHelper": "Call is used for a local invocation, which is a good first step for testing, before clicking send and invoking on the blockchain."
      }
    },
    "form": {
      "addressHelper": "Your address",
      "versionHelper": "Please update the version before updating",
      "versionDuplicateValidationMessage": "You must choose a new value for version",
      "versionLengthValidationMessage": "Version must be 16 or fewer characters",
      "callSuccessMessage": "Contract was locally invoked successfully, click send to run the contract on the blockchain",
      "generalInformationTitle": "General Information",
      "contractSelectionTitle": "Contract Selection",
      "contractSelectionHelper": "Select the contract you'd like to deploy from this file",
      "constructorParametersTitle": "Constructor Parameters",
      "constructorParametersRequiredHelper": "Please provide the parameters for the contract constructor below.",
      "constructorParametersNotRequiredHelper": "There are no constructor parameters needed to deploy this contract.",
      "verifyHelper": "Must select the same solc version you used to deploy the contract."
    },
    "tour": {
      "deployed": {
        "title": "Contract Address",
        "content": "Your contract has been deployed to the blockchain, it is accessible via this contract address."
      },
      "availableActions": {
        "title": "Available Functions",
        "content": "Choose an available smart contract function to run.  Some methods retrieve previous transaction information, others perform transactions, please refer to the source code to understand each function."
      },
      "call": {
        "title": "Call",
        "content": "This is a read only operation, that does not broadcast or publish on to the blockchain.  This is useful for retrieving previously ran information saved in a contract or for testing a transaction before running."
      },
      "send": {
        "title": "Send",
        "content": "This will perform a transaction on the blockchain."
      },
      "tabs": {
        "title": "Contract Info",
        "content": "Contract information, such as source code bytecode and meta data can be found in these tabs"
      }
    },
    "truffle": {
      "title": "How to connect with truffle",
      "first": "Install and setup truffle v4, v5 is not yet supported.",
      "second": "In your truffle project do an npm init, if you haven't done so already, and install web3@0.20.7",
      "third": "Edit your truffle.js file so that it is similar to below, make sure to change your password, your email is your username.",
      "fourth": "Now you should be able to deploy using truffle."
    }
  },
  "zones": {
    "title": "Zones",
    "titleDetail": "Zone:",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} zones",
    "columns": {
      "name": "Name",
      "type": "Type"
    },
    "actions": {
      "new": "New On-premises Zone",
      "upload": "Upload Zone",
      "failedUpload": "Failed to upload",
      "failedUploadDesc": "Make sure your JSON file has the correct zone config attributes.",
      "delete": "delete",
      "cantDelete": "Zones can only be deleted when there isn't any associated replicas or clients.",
      "deleted": "Zone Deleted Successfully",
      "deleteAsk": "Are you sure you want to delete zone 'TARGET_ZONE'?",
      "deleteMsg": "Deleted ",
      "updated": "Zone Updated Successfully",
      "onPre": "Zone Updated Successfully",
      "added": "Zone Added Successfully"
    },
    "detail": {
      "title": "Zone"
    }
  },
  "tls": {
    "validationError": "Please add a valid cert"
  },
  "onPrem": {
    "sections":{
      "basic": {
        "title": "Location & Name",
        "description": "Choose an autocomplete location with latitude/longitude"
      },
      "vcenter": {
        "title": "vCenter",
        "description": "Add vCenter auth, resource, storage, and network info"
      },
      "metrics": {
        "title": "Metrics",
        "description": "Add metrics provider type and credentials"
      },
      "logging": {
        "title": "Logging",
        "description": "Add logging provider type and credentials"
      },
      "outboundProxy": {
        "title": "Outbound Proxy",
        "description": "Proxy from on-prem to external resources"
      },
      "notary": {
        "title": "Notary",
        "description": "Notary is a tool for managing trusted collections of content, such as containers."
      },
      "containerReg": {
        "title": "Container Registry",
        "description": "Where product containers will be located"
      }
    },
    "help": {
      "numberOfNodes": "Number of replicas are optimized for SBFT consensus engine"
    },
    "upload": "Upload Zone",
    "navTitle": "On Premises",
    "pageTitle": "New On Premises Zone",
    "name": "Zone Designation",
    "namePH": "A",
    "vcenter": {
      "title": "vCenter",
      "url": "vCenter URL",
      "urlPH": "https://<vcenter-endpoint>",
      "username": "vCenter Username",
      "usernamePH": "admin@onprem",
      "password": "vCenter Password"
    },
    "resourcePool": "Resource Pool",
    "resourcePoolPH": "My Resource",
    "storage": "Storage",
    "storagePH": "My Storage",
    "folder": "Folder",
    "folderPH": "Folder",
    "network": {
      "title": "Network",
      "compNetwork": "Compute Network",
      "compNetworkPH": "My Network name",
      "gatewayIp": "Gateway IP",
      "gatewayIpPH": "e.g. 10.1.1.254",
      "subnet": "Subnet",
      "subnetPH": "e.g. 24",
      "nameServers": "Name Servers",
      "nameServersPH": "1.1.1.1, 1.1.1.1 List of IP addresses",
      "ipPool": "IP Pool",
      "ipPoolPH": "1.1.1.1-1.1.1.1 Range of IP ranges"
    },
    "wavefront": {
      "title": "Wavefront"
    },
    "elk": {
      "title": "ELK Stack"
    },
    "onPremConnChecking": "Checking vCenter credentials and provided resources...",
    "onPremConnSucc": "Connection successful to your on premises vCenter.",
    "onPremConnFail": "Validation has failed; please ensure your configuration below is accurate.",
    "onPremConnError": "Error has occurred while validating the configuration.",
    "addedSuccessfully": "On premises zone added successfully.  You can now deploy a node to this zone.",
    "logInsight": {
      "title": "Log Insight",
      "ipAddress": "IP Address",
      "ipPH": "10.1.1.1 or company.com",
      "ipHelper": "IP address or DNS, no protocol i.e no https://"
    },
    "containerReg": {
      "title": "Container Registry",
      "url": "URL",
      "urlPH": "https://<endpoint>",
      "username": "Username",
      "usernamePH": "admin@onprem",
      "password": "Password",
      "notaryUrl": "Notary URL"
    },
    "outboundProxy": {
      "title": "Outbound Proxy",
      "httpHost": "Http Host",
      "httpPH": "10.1.1.1 or company.com",
      "httpPort": "Http Port",
      "httpPortPH": "80",
      "httpsPortPH": "443",
      "httpsHost": "Https Host",
      "httpsPort": "Https Port"
    },
    "locationTitle": "Location/Name",
    "location": "Location/Name",
    "locationPH": "Palo Alto, CA, USA",
    "cancel": "Cancel On Premises",
    "ipError": "Please enter a valid IP address",
    "urlError": "Please add a valid url.",
    "ipDnsError": "Please add a valid IP or DNS without protocol.",
    "listIpsError": "Please enter a comma separated list of IPs.",
    "rangeIpsError": "Please enter a - separated range of IPs.",
    "nothingChanged": "Nothing to update",
    "someValidationsFailed": "Form has errors",
    "updateZone": "Update Zone",
    "addZone": "Add On-premises Zone",
    "deleteZone": "Delete",
    "backToList": "« All Zones List",
    "optional": "optional",
    "optionalRequirement": "Not enabled. All fields must be populated for this component to take effect.",
    "metricsProvider": "Metrics Provider"
  },
  "organization": {
    "title": "Organizations",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} orgs",
    "columns": {
      "name": "Name",
      "domain": "Domain",
      "type": "Type",
      "created": "Created On"
    },
    "actions": {
      "users": "Manage Users",
      "invite": "Invite",
      "inviteToOrg": "Invite User(s) To My Organization"
    }
  },
  "environment": {
    "title": "Environment Information",
    "card": {
      "header": "Build Information",
      "build": "Build",
      "commit": "Commit ID"
    }
  },
  "consortium": {
    "title": "Consortium Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Add Instance"
        },
        "delete": {
          "title": "Delete Instance"
        }
      }
    },
    "grid": {
      "pagination": {
        "single": "Consortium",
        "plural": "Consortiums"
      },
      "columns": {
        "id": "ID",
        "name": "Name",
        "orgId": "Organization ID"
      }
    },
    "addConsortiumForm": {
      "title": "Add Consortium",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "MyConsortium"
        },
        "members": {
          "title": "Members"
        }
      },
      "submit": {
        "title": "Add"
      }
    },
    "deleteConsortiumForm": {
      "title": "Delete Instance(s)",
      "submit": {
        "title": "Yes"
      }
    }
  },
  "blockchains": {
    "title": "Blockchain Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Create Blockchain"
        },
        "delete": {
          "title": "Delete Blockchain"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Blockchains"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "membersCount": {
          "title": "Members"
        },
        "channelsCount": {
          "title": "Channels Count"
        },
        "consensusType": {
          "title": "Consensus Type"
        },
        "fabricExplorerUrl": {
          "title": "Fabric Dashboard"
        },
        "k8sDashboardUrl": {
          "title": "Kubernetes Dashboard"
        },
        "status": {
          "title": "Status"
        },
        "action": {
          "title": "Last Action"
        },
        "created": {
          "title": "Created On"
        }
      }
    },
    "detail": {
      "status": "Status",
      "consensusType": "Consensus Type",
      "openKube": "Open Kubernetes Dashboard",
      "openFabric": "Open Fabric Dashboard",
      "orgTab": "Organizations",
      "channelTab": "Channels"
    },
    "addBlockchainForm": {
      "title": "Create Blockchain",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "Blockchain"
        },
        "peerOrg": {
          "title": "Peer Organization"
        },
        "consensusType": {
          "title": "Consensus Type",
          "placeholder": "1234"
        },
        "ordererOrg": {
          "title": "Orderer Org"
        },
        "kubernetes": {
          "title": "Kubernetes Instance",
          "placeholder": "1234"
        },
        "createCli": {
          "title": "Create Cli"
        }
      },
      "submit": {
        "title": "Create"
      }
    },
    "deleteBlockchainForm": {
      "title": "Delete Blockchain(s)",
      "submit": {
        "title": "Yes"
      }
    }
  },
  "logging": {
    "verbose": "Verbose",
    "serviceName": {
      "title": "Services",
      "all": "All",
      "concord": "Concord",
      "daml_ledger_api": "DAML Ledger API",
      "daml_execution_engine": "DAML Engine",
      "ethrpc": "Eth RPC"
    },
    "refresh": "Refresh",
    "logLevel": "Log Level",
    "heatMap": {
      "dailyTitle": "Calls by time of day",
      "hourlyTitle": "Calls by the hour",
      "days": {
        "0": "Sun",
        "1": "Mon",
        "2": "Tue",
        "3": "Wed",
        "4": "Thu",
        "5": "Fri",
        "6": "Sat"
      },
      "axisLabels": {
        "minute": "Minute",
        "hour": "Hour",
        "day": "Day"
      },
      "notEnoughData": "Not enough data available"
    },
    "timePeriods": {
      "oneMinute": "1 Minute",
      "fiveMinutes": "5 Minutes",
      "fifteenMinutes": "15 Minutes",
      "oneHour": "1 Hour",
      "sixHours": "6 Hours",
      "twelveHours": "12 Hours",
      "oneDay": "1 Day",
      "sevenDays": "7 Days",
      "thirtyDays": "30 Days"
    },
    "logTable": {
      "title": "Logs",
      "noLogsFound": "No logs found for the selected time period."
    },
    "actions": {
      "loadMore": "Load More"
    },
    "bar": {
      "title": "logs for",
      "xCalls": "{{num}} Calls",
      "toDate": "To: {{toDate}}",
      "fromDate": "From: {{fromDate}}"
    },
    "counts": {
      "loadingTotalCount": "Getting total count...",
      "totalCount": "{{total}} Total"
    },
    "exports": {
      "title": "Export",
      "exportChartData": {
        "title": "Export Chart Data",
        "countsToExport": "{{count}} counts to export"
      },
      "exportLogEvents": {
        "title": "Export Log Events",
        "logsToExport": "{{count}} logs to export",
        "tooManyLogs": "Too many logs in the selected time frame to export. Please select a smaller time frame.",
        "exportingXLogs": "Exporting {{count}} logs",
        "closeWarning": "Closing this dialog or navigating away from this screen will cancel the export."
      },
      "actions": {
        "export": "Export",
        "close": "Close"
      }
    },
    "errors": {
      "logsQueryError": "An error occurred while getting logs. Please try again. If this error persists, please contact blockchain-support@vmware.com",
      "logsCountError": "An error occurred while getting counts. Please try again. If this error persists, please contact blockchain-support@vmware.com"
    }
  },
  "personas": {
    "systemsAdmin": "Systems Admin",
    "consortiumAdmin": "Consortium Admin",
    "orgAdmin": "Org Admin",
    "orgDeveloper": "Org Developer",
    "orgUser": "Org User"
  },
  "deleteModal": {
    "bodyText": "Are you sure you want to delete"
  },
  "globalError": {
    "routingError": "You do not have permission to visit this section of VMware Blockchain, please contact your sysadmin for more info."
  },
  "users": {
    "title": "User Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Add User"
        },
        "edit": {
          "title": "Edit User"
        },
        "delete": {
          "title": "Delete User"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Users"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "email": {
          "title": "Email"
        },
        "organization": {
          "title": "Organization"
        },
        "persona": {
          "title": "Role"
        }
      }
    },
    "editUserForm": {
      "title": "Edit User",
      "inputs": {
        "firstName": {
          "title": "First Name",
          "placeholder": "First Name"
        },
        "lastName": {
          "title": "Last Name",
          "placeholder": "Last Name"
        },
        "email": {
          "title": "Email",
          "placeholder": "email@domain.com"
        },
        "role": {
          "title": "Role",
          "placeholder": "persona"
        }
      },
      "submit": {
        "title": "Submit"
      }
    },
    "addUserForm": {
      "title": "Add User",
      "inputs": {
        "firstName": {
          "title": "First Name",
          "placeholder": "First Name"
        },
        "lastName": {
          "title": "Last Name",
          "placeholder": "Last Name"
        },
        "email": {
          "title": "Email",
          "placeholder": "emailid@doamin.com"
        },
        "password": {
          "title": "Password",
          "placeholder": "********"
        },
        "confirmPassword": {
          "title": "Confirm Password",
          "placeholder": "********"
        },
        "organization": {
          "title": "Organization",
          "placeholder": "Organization"
        },
        "role": {
          "title": "Role",
          "placeholder": "persona"
        }
      },
      "errors": {
        "password": {
          "minLength": "Password must be at least 8 characters long.",
          "mismatch": "Passwords do not match."
        }
      },
      "submit": {
        "title": "Submit"
      }
    },
    "deleteUserForm": {
      "title": "Delete User(s)",
      "submit": {
        "title": "Yes"
      }
    },
    "settings": {
      "title": "User Settings",
      "orgTitle": "My Organizations and Certificates",
      "firstName": "First Name",
      "lastName": "Last Name",
      "name": "Name",
      "email": "Email",
      "role": "Role",
      "consortiums": "Consortiums",
      "organization": {
        "title": "Organization"
      },
      "wallet": {
        "myWallet": "My Wallet",
        "address": "Address",
        "showPrivateKey": "Show Private Key",
        "download": "Download",
        "createWallet": "Create Wallet"
      },
      "walletForm": {
        "showPrivateKey": "Show Private Key",
        "createWallet": "Create Wallet",
        "enterPassword": "Enter Password",
        "passwordWarning": "Please use a key management solution like 1Password or LastPass to store the passwords, because passwords are not changeable or recoverable.",
        "password": "Password",
        "requiredText": "This is a required field",
        "walletDetails": "Wallet Details",
        "privateKeyWarning": "Never disclose private key.  Anyone with access to your private key can make transactions on your behalf",
        "address": "Address",
        "privateKey": "Private Key",
        "concealedPrivateKey": "************"
      },
      "credentials": "Credentials",
      "downloadCertificate": {
        "title": "Download TLS Certificate",
        "enterPassword": {
          "navTitle": "Enter Password",
          "pageTitle": "Password",
          "enterUserPassword": "Enter User Password",
          "placeholder": "********"
        },
        "enterToken": {
          "navTitle": "Enter Token",
          "pageTitle": "Two Factor Authentication",
          "message": "Action is required. Copy the token from VMware Verify to sign it.",
          "enterToken": "Enter Token",
          "placeholder": "Enter token"
        },
        "credentials": {
          "navTitle": "Credentials",
          "pageTitle": "Download Certificate",
          "message": "Your authentication was successful. Your download should start immediately. If download doesn't start within 1 min, click the download button directly."
        },
        "actions": {
          "download": "Download",
          "close": "Close",
          "next": "Next",
          "previous": "Previous"
        }
      },
      "editSettings": {
        "title": "Edit Settings",
        "alertMessage": "Redirect to CSP for editing the settings."
      },
      "errors": {
        "fetchUserError": "Failed to get user, please try again. If error persists contact blockchain-support@vmware.com.",
        "fetchWalletError": "Failed to get wallet, please try again. If error persists contact blockchain-support@vmware.com."
      }
    }
  },
  "tasks": {
    "title": "Active Tasks",
    "grid": {
      "pagination": {
        "single": "Active Task",
        "plural": "Active Tasks"
      },
      "columns": {
        "id": "Task ID",
        "state": "State",
        "resId": "Resource ID",
        "message": "Message",
        "resLink": "Resource Link"
      }
    }
  },
  "features": {
    "title": "Features",
    "grid": {
      "pagination": {
        "single": "Feature",
        "plural": "Features"
      },
      "columns": {
        "name": "Name",
        "state": "State",
        "category": "Category",
        "scope": "Scope",
        "action": "Action"
      }
    }
  },
  "examples": {
    "title": "Samples",
    "subTitle": "Choose dApp",
    "alert": "This application is already deployed, click links below to either open or redeploy.",
    "deploy": "Deploy",
    "open": "Open",
    "redeploy": "Redeploy",
    "loading": "Deploying dApp",
    "source": "View Source",
    "supply_chain": {
      "title": "Supply Chain",
      "dappName": "Supply Chain",
      "dappDesc": "This is a sample supply chain application that covers contract permissions, versioning and document storage."
    },
    "asset_transfer": {
      "title": "Asset Transfer",
      "dappName": "Asset Transfer",
      "dappDesc": "This is a simple smart contract example of compiling and deploying with solidity and web3."
    }
  },
  "welcome": {
    "title": "Welcome to VMware Blockchain",
    "description1": "You can now deploy a blockchain for your consortium, invite orgs and users to your consortium as well as join other consortiums. Please email us at",
    "description2": "if you have any issues or questions.",
    "deploy": "Deploy Consortium"
  },
  "blockchainWizard": {
    "title": "Deploy",
    "contractEngine": "Contract Engine",
    "common": {
      "consortiumDescription": "Description",
      "consortiumName": "Consortium Name",
      "numberOfNodes": "Number of Replicas"
    },
    "engine": {
      "pageTitle": "Choose Contract Engine",
      "pageDesc": "Contract compiler engine",
      "navTitle": "Contract Engine",
      "damlTitle": "DAML",
      "damlInfo": "Focus only on the data and business logic of your use case and leave lower-level concerns to the runtime. DAML has language-level constructs to abstract away many boilerplate complexities such as signatures, data schemas or privacy.",
      "ethTitle": "Ethereum",
      "ethInfo": "The Ethereum Virtual Machine (EVM) is the runtime environment for smart contracts in Ethereum. Smart contracts are high-level programming abstractions that are compiled down to EVM bytecode and deployed to the Ethereum blockchain for running. Most commonly written in Solidity.",
      "hlfTitle": "Hyperledger Fabric",
      "hlfInfo": "Fabric is the first distributed ledger platform to support smart contracts authored in general-purpose programming languages such as Java, Go and Node.js. This means that most enterprises already have the skill set needed to develop smart contracts, and no additional training to learn a new language or DSL is needed."
    },
    "details": {
      "help": {
        "numberOfNodes": "Replicas options are optimized for ConcordBFT consensus engine."
      },
      "pageTitle": "Consortium Details",
      "pageDesc": "Consortium name and description",
      "navTitle": "Details",
      "consortiumPlaceholder": "My Consortium",
      "consortiumDescriptionPlaceholder": "Describe the intent of the consortium"
    },
    "sizing": {
      "title": "Node Sizing",
      "pageDesc": "CPU, storage and memory sizing for replicas and clients",
      "replicaTitle": "Replica Sizing",
      "clientTitle": "Client Sizing",
      "back": "Back to templates",
      "custom": "Custom Sizing",
      "Small": "Node sizing for light workloads or developer instances to deploy and test contracts",
      "Medium": "Node sizing for enterprise grade deployments for medium size workloads",
      "noOfCPU": "Number of vCPUs Per Node",
      "memory": "Memory Per Node",
      "storage": "Storage Per Node",
      "Large": "Node sizing for enterprise grade deployments for, heavy workloads",
      "error": "Value is out of range!"
    },
    "nodes": {
      "help": {
        "numberOfNodes": "Number of replicas are optimized for SBFT consensus engine"
      },
      "pageTitle": "Configure Replica Nodes",
      "pageDesc": "Choose the amount of replicas and zone location",
      "navTitle": "Replica Nodes",
      "onPremTitle": "On Premises Zone Distribution",
      "cloudTitle": "Cloud Zone Distribution",
      "regionalTitle": "Selected Zones",
      "regionInfo": "Even distribution of replicas across zones is recommended for best network resiliency.  The cumulative amount in zones must equal number of replicas to continue to the next step.",
      "onPremInfo": "Hybrid cloud is not yet available. If you add an on premise region, cloud regions will be disabled.",
      "add": "Add On Premises Region",
      "distributionHelper": "Current distribution does not match the total number of nodes specified."
    },
    "committers": {
      "singular": "Replica",
      "plural": "Replicas"
    },
    "clients": {
      "singular": "Client",
      "plural": "Clients",
      "pageTitle": "Add Client Groups",
      "pageDesc": "Choose the amount of client groups and clients for each",
      "navTitle": "Client Nodes",
      "clientNode": "Client Node",
      "clientGrouping": "Group Name",
      "deleteClientGroup": "Delete Group",
      "addClient": "Add Client Node",
      "defaultGroup": "Default Group",
      "addClientGroup": "Add Client Node Group",
      "groupNamePH": "Client Group Name",
      "enableGrouping": "Enable Grouping",
      "addNodeToGroup": "Add Node to Group",
      "groupNameErrorHelper": "Must be non-emtpy and unique.",
      "groupNameErrorDupe": "'{{groupName}}' is already used.",
      "formErrors": "The following issues must be resolved before moving forward",
      "groupNameError": "Group name is not valid. ",
      "zoneSelectError": "Zone has not been selected. ",
      "authUrlError": "Auth URL is not valid. ",
      "authUrlInputError": "Please provide a valid URL.",
      "clientGroupingInfo": "Client nodes in the same group are duplicates of each other (the same \"Logical ID\") and can view & interact with the same dataset on the blockchain. Enabling client grouping can also increase service availability. Maximum of 5 nodes are allowed in a group.",
      "clientGroupMaxMembersReached": "Cannot add any more nodes; reached maximum allowed nodes per group",
      "clientsMaxReached": "Cannot add anymore; reached maximum allowed client nodes per system",
      "clear": "Clear All",
      "name": "Node Name",
      "zone": "Zone",
      "chooseZone": "Choose Zone...",
      "authUrl": "Auth URL",
      "authUrlPH": "https://<jwks-endpoint>",
      "tls": "Add TLS",
      "pem": "PEM",
      "pemPH": "-----BEGIN PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtFjFDq8b2wtbrI3F+3/qOzJzAiTNbKRzA/asBquYSP60mqAl\nr71qo5+L8NYwNlvyQpOm9SMRqyoH8yilndLjdDPHcjbol57VERdUhZwhJhXJ0UIO\n4hSAmHVD05y68nkFFHuvPsH9EEJcruLbuTPhKljkzCNU9U2g6rQGkz070yjgLdRo\ntxQJ+GZCbIyWdStjp/1LTs9tQ7Aiaq2OBwHFRbGw1PjqIqQ+UFqUN1eVRPAX1UKu\nn6sYU+Mf1rioH6ayH6tx3E7cjT6R0Ons25LAP5d1GhgBhtEGPeHJhn28GYYHoYOy\nYP2LQEESkPdqzzk2kESmV9JvptfUGOhN1kwsyQIDAQABAoIBAQCmCB+LED014PQK\nHQ+LJc1PqHdnHticT52vpXXkQi/V69/7hrqLW3gEoUrlc1s5gFa9Yk/P2PRYPz7I\nZsBqVw+eGFli1hg2Fj0UGgVvaDjAZkjBxO4Mx1FIipTiCaW2uyGpJOFGhrNjN6U6\nQJKGo7OFGAezxEdf+pLN4OU4wqQEFk6vqszA40d/dg8gaYSzBmpOGGiLScuIqTX0\nPjTxy94ImF42X+OHqwAwv4ukNj7QyqGySoEmPlHW4UXp07H7FuaIXQljHXW6ojRr\nk12cOEVs1ilVYwikcpAANrb0v7uKfGaJeGJWxQZKdU4ULU6T7geZu/R5V4vg2t1f\nRAh4e+EtAoGBAN+/vHIxFAjYMx6INC+dk7r7cj3TBFykg+avYxVi+ybDQ3ch4its\nr1+AxdNzHfskkXoLq3D0AeYBB5h0tTVs2ikGfYfR/7Tw6nipWc2L/VwlSvjLFo9v\nVO5wewl4adEFMqzTVx6yz/OGxhKYYWo0yzBHV5Cvt2XXUk766eZ6IazXAoGBAM5X\ngZTk1JWZ8xpK2CuF5czl+0frTBYL7gqZqiU08g3feR0aXeD93T794a0vqohzNjmz\nQUFOz1Pucm94EfOLuuqDAVjYT4QbbnA9AxsvKMOLNdtoiuWTNYWaYXrOwcb6rmnD\nLToTmK9l9qNQqyM97RLxUsEA91hwlPE3BXgsOR9fAoGBAIqxn25pXbHd0lIqu66I\nTvqowrfwBdQnZluofBLVuDje8QL3zep9BHh+qiHYSc1TbZnpgewSVNrt6HdoYKst\nPk4P5+A5G/hdHfqNf00aaYKk20Q9H07qBAuJTbshGPan8jGPD4HH9X9PG5iLPFdJ\nQmo6ztyxD03hmvO6NSLYsechAoGAc+E216yPKpjzqs9fiUnAHYsGzIP7DeKTQ4a6\nw/xw95OKC+sTz9giGU8xHzbGuayiRlNCEXA2BTfDMpCm3DSbuznpVsDcHx/crNHG\n3cxlQzP6Agc7AeTjSO3DUtmsf5emvaSr0JLSy6YileMmyTrs2heG1vc48YUAUFsL\nCksjpVcCgYBx4O1IfiV3vQ5omio3MyfjYu+jy1eoqh78K/jDfoXJseXbA/HSV0tX\nvhtiVXImzoCKXMvwzLaVRxJZt9P3KPHIggGo+1dL3vEFkhcDV12WLXA2MfJmo8jk\n35Bnaz1t7SKeCqejCR9NNu4VNy/Bm3Y7Nmkp8oSdD2clr8GhFusR6A==\n-----END PRIVATE KEY-----",
      "crt": "Cert",
      "crtPH": "-----BEGIN CERTIFICATE-----\nMIIDMTCCAhkCFDNALduPhMbX4lfTpo/2cDz6r9/cMA0GCSqGSIb3DQEBCwUAMGcx\nCzAJBgNVBAYTAlVTMQ0wCwYDVQQIDARVdGFoMQ4wDAYDVQQHDAVQcm92bzEjMCEG\nA1UECgwaQUNNRSBTaWduaW5nIEF1dGhvcml0eSBJbmMxFDASBgNVBAMMC2V4YW1w\nbGUubmV0MB4XDTIwMTAyMTE3MTYyOVoXDTQ1MTAyMTE3MTYyOVowQzELMAkGA1UE\nBhMCVVMxDTALBgNVBAgMBFV0YWgxDjAMBgNVBAcMBVByb3ZvMRUwEwYDVQQKDAxB\nQ01FIFNlcnZpY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0WMUO\nrxvbC1usjcX7f+o7MnMCJM1spHMD9qwGq5hI/rSaoCWvvWqjn4vw1jA2W/JCk6b1\nIxGrKgfzKKWd0uN0M8dyNuiXntURF1SFnCEmFcnRQg7iFICYdUPTnLryeQUUe68+\nwf0QQlyu4tu5M+EqWOTMI1T1TaDqtAaTPTvTKOAt1Gi3FAn4ZkJsjJZ1K2On/UtO\nz21DsCJqrY4HAcVFsbDU+OoipD5QWpQ3V5VE8BfVQq6fqxhT4x/WuKgfprIfq3Hc\nTtyNPpHQ6ezbksA/l3UaGAGG0QY94cmGfbwZhgehg7Jg/YtAQRKQ92rPOTaQRKZX\n0m+m19QY6E3WTCzJAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAEsEHtPwUzDEbBWQ\njeuQRr3ln0QCfG4zKUhlfpycBVTDk1iqX7OrFzTNlCDIoDM7dlgSDa0JvEeHEt8R\nBVbFjyb/3DBVKuX04kgQ83Iq9PBuLss3GhP99HMyXE5Tnnm0mRhK/gjJUSA5UG0T\nUKMXdeSgWbDyEldteJSLO6ozEyBuaFIBDV+FeuIP5y1KY7h7ASTZVP8o1juVxwX5\n+/ow0JunohcBummGh4ioeC0QApoL5tNTWfcGKIZI+Vv0POeOuArznuIIYGE3BlDE\nNpYrS3O1uxP+5B9AIZ6yyT1sknn/X2AfC38zkfEZDxfbF182Jc5cZ4/XeCUvn3jS\nMzhxUzs=\n-----END CERTIFICATE-----",
      "cacrt": "CA Cert",
      "cacrtPH": "CA Cert",
      "authUrlHelper": "Endpoint for fetching IAM public key for LedgerAPI authentication.",
      "group": "Group",
      "logicalGrouping": "Group Number",
      "logicalGroupingPH": "Leave empty for regular standalone client node.",
      "logicalGroupingHelper": "Client nodes in the same group are duplicates of each other helping availability.",
      "logicalGroupingError": "Please provide a valid whole number group index.",
      "paginationTotal": "Viewing {{start}} - {{finish}} of total {{total}} client nodes.",
      "selectZone": "Select Zone",
      "number": "Number of Client Nodes"
    },
    "users": {
      "pageTitle": "Invite Users",
      "navTitle": "Users",
      "invite": "Invite",
      "email": "Email",
      "emailPlaceholder": "jdoe@email.com",
      "errors": {
        "email": "A valid email address is required"
      },
      "role": "Role",
      "noUsers": "No Users Added"
    },
    "reviewDeployment": {
      "pageTitle": "Review and Deploy",
      "navTitle": "Deploy",
      "consortiumName": "Consortium Name",
      "consortiumSetup": "Replicas",
      "users": "Users"
    }
  },
  "deployLoader": {
    "waiting": "Waiting for deployment task...",
    "initial": "Deploy consortium started...",
    "first": "Creating VMs...",
    "second": "Deploying concord replicas...",
    "third": "Distributing keys...",
    "fourth": "Starting up Concord trust network...",
    "ending": "Deployment successful!"
  },

  "mockTasks": {
    "creatingOrg": "Creating Organizations",
    "addingUsers": "Adding Users",
    "creatingConsortium": "Creating Consortium",
    "vmInstance": "VM Instance",
    "blockchainInstance": "Blockchain Instance"
  },
  "tourSteps": {
    "title": "Take Tour",
    "nextBtnText": "Next",
    "prevBtnText": "Prev",
    "endBtnText": "End",
    "dashboard": {
      "dashStats": {
        "title": "General Status",
        "text": "Here you can see the general status of nodes, contracts, blocks and transactions.  Dashboard stats and lists refresh automatically, so no need to reload the page."
      },
      "nodeStatus": {
        "title": "Replica Status",
        "text": "Hover over a replica on the map to see its health and status."
      },
      "nodes": {
        "title": "Replica List",
        "text": "Here you can see the replicas' name, IP address (with port), and their general health status."
      },
      "organization": {
        "title": "Organizations",
        "text": "Here you can see the list of organizations in this consortium."
      },
      "contractList": {
        "title": "Contract List",
        "text": "Here are recent contracts that have been added. As well as other lists with recent updates."
      }
    },
    "smartContracts": {
      "manageSmartContracts": {
        "title": "Manage Smart Contracts",
        "text": "This is where you can manage and view your smart contracts as well as other smart contracts submitted by members of your consortium."
      },
      "createSmartContract": {
        "title": "Deploy",
        "text": "Click here to deploy a contract"
      }
    },
    "users": {
      "userManagement": {
        "title": "Manage users",
        "text": "Click here to manage users in your organization or consortium."
      },
      "userActions": {
        "title": "User Actions",
        "text": "Add and manage users here."
      },
      "userSettings": {
        "title": "User settings",
        "text": "Click here to go to your user settings and download organization certificates."
      },
      "downloadCertificate": {
        "title": "Download certificate",
        "text": "Click here to download your certificate to connect this blockchain with third-party apps."
      }
    }
  },
  "map": {
    "noLocation": "No Location Available"
  },
  "graph": {
    "days": {
      "0": "Sunday",
      "1": "Monday",
      "2": "Tuesday",
      "3": "Wednesday",
      "4": "Thursday",
      "5": "Friday",
      "6": "Saturday"
    }
  },
  "logDetails": {
    "col": {
      "ingestTimestamp": "ingest_timestamp",
      "logTimestamp": "log_timestamp",
      "function": "function",
      "message": "message",
      "ethRequestId": "eth_request_id",
      "organizationId": "organization_id",
      "source": "source",
      "id": "id",
      "process": "process"
    }
  },
  "details": {
    "blockchain": "Blockchain",
    "title": "Details & Support",
    "about": "About This Blockchain",
    "cardTitle": "System Properties",
    "supportHint": "When contacting support, please have the following information ready as it will help us help you faster.",
    "logo": {
      "exec": "Exec. Engine",
      "consensus": "Consensus"
    },
    "productVersion": "Product Version",
    "execEngineVersion": "DAML SDK Version",
    "createdDate": "Creation Date",
    "createdBy": "Created By",
    "tabs": {
      "blockchain": "About This Blockchain",
      "committers": "Replicas",
      "clients": "Clients"
    },
    "nodeMetrics": "Metrics",
    "ssh": {
      "buttonTitle": "SSH Info",
      "modalTitle": "SSH Credentials",
      "description": "Here are the SSH credentials you can use to log in to the node.",
      "credentialsName": "SSH Username & Password",
      "username": "Username",
      "password": "Password",
      "close": "close"
    },
    "committer": {
      "name" : "Replica",
      "ethrpc": "RPC URL"
    },
    "client":{
      "name": "Client",
      "groupId": "Group ID",
      "groupName": "Group Name",
      "logicalId": "Logical ID",
      "authUrl": "Auth URL",
      "endpoint": "Endpoint"
    },
    "node": {
      "id": "Node ID",
      "publicIp": "Public IP",
      "privateIp": "Private IP",
      "zoneId": "Zone ID",
      "zoneName": "Zone Name"
    }
  }
}
